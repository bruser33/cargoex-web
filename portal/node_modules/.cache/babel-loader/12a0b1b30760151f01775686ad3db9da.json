{"ast":null,"code":"import _classCallCheck from \"D:\\\\Users\\\\prico\\\\Desktop\\\\cargoex-web\\\\portal2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Users\\\\prico\\\\Desktop\\\\cargoex-web\\\\portal2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Users\\\\prico\\\\Desktop\\\\cargoex-web\\\\portal2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Users\\\\prico\\\\Desktop\\\\cargoex-web\\\\portal2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Users\\\\prico\\\\Desktop\\\\cargoex-web\\\\portal2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\Users\\\\prico\\\\Desktop\\\\cargoex-web\\\\portal2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\Users\\\\prico\\\\Desktop\\\\cargoex-web\\\\portal2\\\\src\\\\Cargamasiva.js\";\nimport React, { Component } from 'react';\nimport { Button, Container, Row, Col, Dropdown, DropdownButton, Card, Alert, Modal } from 'react-bootstrap';\nimport DatePicker from \"react-datepicker\";\nimport { InfoWindow, Marker, GoogleApiWrapper, Polyline, withScriptjs } from 'google-maps-react';\nimport Map from './Map';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport Geocode from \"react-geocode\";\nimport { css } from '@emotion/core';\nimport { ClipLoader } from 'react-spinners';\nimport CSVReader from \"react-csv-reader\";\nimport Autocomplete from 'react-autocomplete';\nimport BarcodeReader from 'react-barcode-reader';\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, PieChart, Pie, Sector, Cell, ResponsiveContainer } from 'recharts';\nimport axios from 'axios';\nimport cors from 'cors';\nimport 'react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './App.css';\nimport { ciudades } from \"./constants/json\";\n\nvar Cargamasiva =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Cargamasiva, _Component);\n\n  function Cargamasiva(props) {\n    var _this;\n\n    _classCallCheck(this, Cargamasiva);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Cargamasiva).call(this, props));\n    _this.state = {\n      ordenes: [],\n      displayTabla: 'none',\n      cantidad_ordenes: 0,\n      modaldatos: false,\n      modalfinalizado: false,\n      modalruta: true,\n      datoerror: '',\n      loading: false,\n      displayAprobar: 'none',\n      displayCarga: 'none',\n      latitude: '',\n      longitude: '',\n      idcliente: '',\n      clientes: [],\n      regiones: []\n    };\n    _this.cargarcsv = _this.cargarcsv.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClose2 = _this.handleClose2.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.cargarOrdenes = _this.cargarOrdenes.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.changeTituloClientes = _this.changeTituloClientes.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Cargamasiva, [{\n    key: \"changeTituloClientes\",\n    value: function changeTituloClientes(item, value) {\n      var config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"X-API-KEY\": \"55IcsddHxiy2E3q653RpYtb\",\n          \"Access-Control-Allow-Origin\": \"*\"\n        }\n      };\n      this.setState({\n        value: item,\n        idcliente: value.id,\n        displayCarga: 'block'\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      this.getMyLocation();\n      var config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"X-API-KEY\": \"55IcsddHxiy2E3q653RpYtb\",\n          \"Access-Control-Allow-Origin\": \"*\"\n        }\n      };\n      var url = document.URL;\n      var urlseparada = url.split('tipo_usuario=');\n      var tipo_usuario = urlseparada[urlseparada.length - 1];\n      tipo_usuario = tipo_usuario.replace('#', '');\n      axios.post(\"http://app.cargoex.cl:5000/clientes\", config).then(function (res) {\n        var clientes = res.data;\n        console.log('cliente de bd');\n        console.log(clientes);\n        var clientesBd = [];\n\n        if (tipo_usuario === 'admin') {\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = clientes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var cliente = _step.value;\n              clientesBd.push({\n                id: cliente.ID,\n                nombre: cliente.NOMBRE.toUpperCase()\n              });\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n        } else {\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = clientes[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var _cliente = _step2.value;\n\n              if (_cliente.ID + '' === tipo_usuario + '') {\n                console.log('escocgio cliente');\n                console.log(_cliente);\n                clientesBd.push({\n                  id: _cliente.ID,\n                  nombre: _cliente.NOMBRE.toUpperCase()\n                });\n              }\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n        }\n\n        console.log(clientesBd);\n\n        _this2.setState({\n          clientes: clientesBd\n        });\n      });\n      axios.get(\"http://app.cargoex.cl/app/cargoex/app/ciudades\", config).then(function (res) {\n        var ciudades = res.data;\n        var regionesBd = [];\n        var ramales = [];\n        console.log('ciudades son');\n        console.log(ciudades);\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n          for (var _iterator3 = ciudades.datos[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n            var city = _step3.value;\n            regionesBd.push({\n              iata: city.IATA,\n              name: city.NOMBRE.toUpperCase(),\n              padre: city.IATA_PADRE\n            });\n          }\n        } catch (err) {\n          _didIteratorError3 = true;\n          _iteratorError3 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n              _iterator3.return();\n            }\n          } finally {\n            if (_didIteratorError3) {\n              throw _iteratorError3;\n            }\n          }\n        }\n\n        _this2.setState({\n          regiones: regionesBd\n        });\n      });\n      /*\r\n          var config2 = {\r\n          headers: {\"Content-Type\": \"application/json\",\"X-API-KEY\": \"55IcsddHxiy2E3q653RpYtb\",\"Access-Control-Allow-Origin\": \"*\"}\r\n          };\r\n          let data = JSON.stringify([{\r\n              \"COD_CLIENTE\" : 2222,\r\n              \"ID_REFERENCIA\" : \"223422\",\r\n              \"NOMBRE\" : \"LUIS ESPINOZA\",\r\n              \"RUT\" : \"1111111-1\",\r\n              \"DIRECCION\" : \"los alerces 232\",\r\n              \"GUIA\" : \"123-456-789\",\r\n              \"COMUNA\" : \"SCL\",\r\n              \"LONG_ORIGEN\" : \"0\",\r\n              \"LAT_ORIGEN\" : \"0\",\r\n              \"NOTA\" : \"ENTREGAR CON CUIDADO\",\r\n              \"TELEFONO\" : \"+56922554788\",\r\n              \"MAIL\" : \"TUMAI@mail.com\",\r\n              \"BULTOS\" : \"1\",\r\n              \"ALTO\" : \"1.2\",\r\n              \"ANCHO\" : \"1.6\",\r\n              \"LARGO\" : \"4.2\",\r\n              \"PESO\" : \"1.6\",\r\n              \"TIPO_CARGA\" : \"CAJA\",\r\n              \"CENTRO_COSTO\" : \"ECOMMERCE\",\r\n              \"TIPO_NEGOCIO\" : \"PRINCIPAL\",\r\n              \"CANAL\" : \"AUTOSERVICIO\",\r\n              \"COD_BARRA\" : \"54159116564\",\r\n              \"NUM_BOLETA\" : \"1111574414\",\r\n              \"VALOR\" : \"22990\",\r\n              \"TIPO_ORDEN\" : \"ENTREGA\",\r\n              \"COMUNA_ORIGEN\" : \"SCL\"\r\n                      }]);\r\n                      console.log('va a llamar metodo a probar');\r\n          axios.post(\"http://app.cargoex.cl/app/cargoex/app/despacho\",data,config2)\r\n                        .then(res => {\r\n                          var clientes= res.data;\r\n                          console.log(clientes);\r\n                        });\r\n      */\n    }\n  }, {\n    key: \"getMyLocation\",\n    value: function getMyLocation() {\n      var _this3 = this;\n\n      var location = window.navigator && window.navigator.geolocation;\n\n      if (location) {\n        location.getCurrentPosition(function (position) {\n          _this3.setState({\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude\n          });\n\n          console.log('va a mostrar posicion actual ');\n          console.log(position.coords.latitude);\n          console.log(position.coords.longitude);\n        }, function (error) {\n          _this3.setState({\n            latitude: 'err-latitude',\n            longitude: 'err-longitude'\n          });\n        });\n      }\n    }\n  }, {\n    key: \"handleClose\",\n    value: function handleClose() {\n      this.setState({\n        modaldatos: false\n      });\n    }\n  }, {\n    key: \"handleClose2\",\n    value: function handleClose2() {\n      this.setState({\n        modalfinalizado: false\n      });\n    }\n  }, {\n    key: \"agregarUnidad\",\n    value: function agregarUnidad(num) {\n      console.log('tamaño es' + num.toString().length);\n\n      if (num.toString().length === 1) {\n        return '0' + num;\n      } else {\n        return num;\n      }\n    }\n  }, {\n    key: \"calculateDistance\",\n    value: function calculateDistance(lat1, lon1, lat2, lon2, unit) {\n      var radlat1 = Math.PI * lat1 / 180;\n      var radlat2 = Math.PI * lat2 / 180;\n      var radlon1 = Math.PI * lon1 / 180;\n      var radlon2 = Math.PI * lon2 / 180;\n      var theta = lon1 - lon2;\n      var radtheta = Math.PI * theta / 180;\n      var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n      dist = Math.acos(dist);\n      dist = dist * 180 / Math.PI;\n      dist = dist * 60 * 1.1515;\n\n      if (unit == \"K\") {\n        dist = dist * 1.609344;\n      }\n\n      if (unit == \"N\") {\n        dist = dist * 0.8684;\n      }\n\n      return dist;\n    }\n  }, {\n    key: \"verificarCiudad\",\n    value: function verificarCiudad(city) {\n      for (var i = 0; i < ciudades.length; i++) {\n        if (ciudades[i].IATA.toUpperCase() === city.toUpperCase() || ciudades[i].NOMBRE.toUpperCase() === city.toUpperCase()) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"obtenerIata\",\n    value: function obtenerIata(city) {\n      for (var i = 0; i < ciudades.length; i++) {\n        if (ciudades[i].IATA.toUpperCase() === city.toUpperCase() || ciudades[i].NOMBRE.toUpperCase() === city.toUpperCase()) {\n          return ciudades[i].IATA;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"cargarOrdenes\",\n    value: function cargarOrdenes() {\n      var _this4 = this;\n\n      console.log('llego a cargar ordenes');\n      this.setState({\n        loading: true,\n        displayTabla: 'none',\n        displayAprobar: 'none'\n      });\n      var idcliente = this.state.idcliente;\n      console.log(idcliente);\n      var ordenes = this.state.ordenes; //  console.log(ordenes);\n\n      var datetime = new Date();\n      var dia = this.agregarUnidad(datetime.getDate());\n      var mes = this.agregarUnidad(datetime.getMonth() + 1);\n      var hora = this.agregarUnidad(datetime.getHours());\n      var minutos = this.agregarUnidad(datetime.getMinutes());\n      var segundos = this.agregarUnidad(datetime.getSeconds());\n      var diaActual = datetime.getFullYear() + '-' + mes + '-' + dia + ' ' + hora + ':' + minutos + ':' + segundos;\n      var config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"X-API-KEY\": \"55IcsddHxiy2E3q653RpYtb\",\n          \"Access-Control-Allow-Origin\": \"*\"\n        }\n      };\n      var data = JSON.stringify({\n        idcliente: idcliente,\n        ordenes: ordenes,\n        dia: diaActual\n      });\n      console.log('harallamado a servicio ');\n      axios.post(\"http://localhost:5000/insertarOrdenes\", data, config).then(function (res) {\n        _this4.setState({\n          loading: false,\n          modalfinalizado: true\n        }); //codigo de distancia\n\n        /*\r\n        var latitude = this.state.latitude;\r\n        var longitude = this.state.longitude;\r\n          for ( let i = 0; i < ordenes.length; i++) {\r\n          ordenes[i][\"distance\"] = this.calculateDistance(latitude,longitude,ordenes[i][\"lat_comuna\"],ordenes[i][\"lng_comuna\"],\"K\");\r\n        }\r\n          ordenes.sort(function(a, b) {\r\n          return a.distance - b.distance;\r\n        });\r\n        console.log(ordenes);\r\n        */\n\n        /*\r\n        const agentes = res.data;\r\n        console.log(agentes);\r\n        const agentesBd=[];\r\n        for(let agente of agentes.datos){\r\n          agentesBd.push({id: agente.COD_CHOFER,nombre: agente.NOMBRE.toUpperCase(),rut:agente.RUT});\r\n        }\r\n        this.setState({ ciudad:value,operadores:agentesBd });\r\n        */\n\n      });\n    }\n  }, {\n    key: \"cargarcsv\",\n    value: function cargarcsv(event) {\n      console.log('llego a cargar csv');\n      var ordenes = [];\n      Geocode.setApiKey(\"AIzaSyCnxZQw92wExvw6VWPC4nww2psARwSuy5g\");\n      Geocode.enableDebug();\n      var bandera = true;\n      var error = 'Faltan datos obligatorios (nombre, direccion, guia, comuna, bultos o tipo de orden) o ciudad y origen no son codigos iata en fila';\n      var erraux = '';\n      console.log(event);\n      console.log('mostrara ultima posicion');\n\n      if (event[event.length - 1].length < 2) {\n        console.log('paso validacion de ultima posicion vacia');\n        event.splice(event.length - 1, 1);\n      }\n\n      console.log(event[event.length - 1]);\n      this.setState({\n        cantidad_ordenes: event.length - 1\n      });\n\n      if (event[0].length !== 24) {\n        var error2 = 'La cantidad de columnas no son las apropiadas o esta seleccionando un tipo de archivo incorrecto';\n        bandera = false;\n        this.setState({\n          modaldatos: true,\n          datoerror: error2,\n          displayTabla: 'none',\n          displayApertura: 'none'\n        });\n      } else {\n        for (var aux = 1; aux < event.length; aux++) {\n          if (event[aux][0] === '' || event[aux][2] === '' || event[aux][3] === '' || event[aux][4] === '' || event[aux][5] === '' || event[aux][9] === '') {\n            if (erraux.length < 20) {\n              erraux += ' Nº' + (aux + 1);\n            } else {\n              erraux += '...';\n            }\n\n            console.log('mostrara equivocado');\n            console.log(event[aux]);\n            bandera = false;\n          } else if (!this.verificarCiudad(event[aux][4]) || !this.verificarCiudad(event[aux][5])) {\n            if (erraux.length < 20) {\n              erraux += ' Nº' + (aux + 1);\n            } else {\n              erraux += '...';\n            }\n\n            console.log('mostrara equivocado');\n            console.log(event[aux]);\n            bandera = false;\n          } else {\n            var bultosOrden = event[aux][9] + '';\n\n            if (bultosOrden === '0') {\n              bultosOrden = '1';\n            }\n\n            ordenes.push({\n              id: aux,\n              nombre: event[aux][0].toUpperCase(),\n              rut: event[aux][1],\n              direccion: event[aux][2],\n              guia: event[aux][3],\n              comuna: event[aux][4].toUpperCase(),\n              origen: event[aux][5].toUpperCase(),\n              lat_comuna: \" \",\n              lng_comuna: \" \",\n              nota: event[aux][6].toUpperCase(),\n              telefono: event[aux][7],\n              mail: event[aux][8],\n              bultos: bultosOrden,\n              alto: event[aux][10],\n              ancho: event[aux][11],\n              largo: event[aux][12],\n              peso: event[aux][13],\n              tipo_carga: event[aux][14].toUpperCase(),\n              centro_costo: event[aux][15].toUpperCase(),\n              cod_barra: event[aux][16],\n              num_boleta: event[aux][17],\n              valor: event[aux][18],\n              tipo_orden: event[aux][19].toUpperCase(),\n              tipo_negocio: event[aux][20].toUpperCase(),\n              canal: event[aux][21].toUpperCase(),\n              refrigerado: event[aux][22].toUpperCase(),\n              papel: event[aux][23].toUpperCase()\n            });\n            console.log('bandera es');\n            console.log(bandera);\n            /*          if(aux===event.length-1 ){\r\n                        console.log('ordenes son');\r\n                        console.log(ordenes);\r\n                        }  */\n          }\n        }\n\n        ordenes.sort(function (a, b) {\n          return parseFloat(a.id) - parseFloat(b.id);\n        });\n\n        if (bandera) {\n          this.setState({\n            ordenes: ordenes,\n            displayTabla: 'block',\n            displayAprobar: 'block'\n          });\n        } else {\n          this.setState({\n            modaldatos: true,\n            datoerror: error + ' ' + erraux,\n            displayTabla: 'none',\n            displayApertura: 'none',\n            displayAprobar: 'none'\n          });\n        }\n        /*   Geocode.fromAddress(event[aux][4]).then(\r\n                response => {\r\n                  const { lat, lng } = response.results[0].geometry.location;\r\n                  console.log(lat, lng);\r\n                  ordenes.push({id:aux+1,nombre:event[aux][0].toUpperCase(),rut:event[aux][1],direccion:event[aux][2],guia:event[aux][3],\r\n                                comuna:event[aux][4].toUpperCase(),lat_comuna:lat+\"\",lng_comuna:lng+\"\",nota:event[aux][5].toUpperCase(),\r\n                                telefono:event[aux][6],mail:event[aux][7],\r\n                                bultos:event[aux][8],alto:event[aux][9],ancho:event[aux][10],largo:event[aux][11],\r\n                                peso:event[aux][12],tipo_carga:event[aux][13].toUpperCase(),centro_costo:event[aux][14].toUpperCase(),\r\n                                cod_barra:event[aux][15],\r\n                                num_boleta:event[aux][16],valor:event[aux][17],tipo_orden:event[aux][18].toUpperCase()\r\n                              });\r\n                  console.log('bandera es');\r\n                  console.log(bandera);\r\n                  if(aux===event.length-1 ){\r\n                    console.log('ordenes son');\r\n                    console.log(ordenes);\r\n                    ordenes.sort(function(a, b) {\r\n                        return parseFloat(a.id) - parseFloat(b.id);\r\n                      });\r\n                    if(bandera){\r\n                      this.setState({ ordenes:ordenes,\r\n                                      displayTabla:'block',\r\n                                      displayAprobar:'block'})\r\n                    }else{\r\n                      this.setState({ ordenes:ordenes,\r\n                                      displayTabla:'none',\r\n                                      displayAprobar:'none'});\r\n                    }\r\n                  }\r\n                },\r\n                error => {\r\n                  var error2 = 'la direccion en fila Nº'+aux+' no puede ser verificada ';\r\n                  ordenes.push({id:aux+1,nombre:event[aux][0].toUpperCase(),rut:event[aux][1],direccion:event[aux][2],guia:event[aux][3],\r\n                              comuna:event[aux][4].toUpperCase(),lat_comuna:\" \",lng_comuna:\" \",nota:event[aux][5].toUpperCase(),\r\n                              telefono:event[aux][6],mail:event[aux][7],\r\n                              bultos:event[aux][8],alto:event[aux][9],ancho:event[aux][10],largo:event[aux][11],\r\n                              peso:event[aux][12],tipo_carga:event[aux][13].toUpperCase(),centro_costo:event[aux][14].toUpperCase(),\r\n                              cod_barra:event[aux][15],\r\n                              num_boleta:event[aux][16],valor:event[aux][17],tipo_orden:event[aux][18].toUpperCase()\r\n                            });\r\n                              console.log('bandera es');\r\n                              console.log(bandera);\r\n                              if(aux===event.length-1 ){\r\n                                console.log('ordenes son');\r\n                                console.log(ordenes);\r\n                                ordenes.sort(function(a, b) {\r\n                                    return parseFloat(b.id) - parseFloat(a.id);\r\n                                  });\r\n                                if(bandera){\r\n                                  this.setState({ ordenes:ordenes,\r\n                                                  displayTabla:'block',\r\n                                                  displayAprobar:'block' });\r\n                                }else{\r\n                                  this.setState({ ordenes:ordenes,\r\n                                                  displayTabla:'none',\r\n                                                  displayAprobar:'none'});\r\n                                }\r\n                              }\r\n                    }\r\n                  );\r\n        */\n\n      }\n    }\n  }, {\n    key: \"matchStocks\",\n    value: function matchStocks(state, value) {\n      return state.nombre.toLowerCase().indexOf(value.toLowerCase()) !== -1;\n    }\n  }, {\n    key: \"cambiarCliente\",\n    value: function cambiarCliente(value) {\n      this.setState({\n        displayCarga: 'none',\n        value: value\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var selectRow = {\n        mode: 'checkbox',\n        showOnlySelected: true\n      };\n      var options = {\n        toolBar: this.createCustomToolBar\n      };\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        show: this.state.modaldatos,\n        onHide: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458\n        },\n        __self: this\n      }, \"ALERTA !\")), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        style: {\n          color: '#ff0000'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461\n        },\n        __self: this\n      }, this.state.datoerror)), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464\n        },\n        __self: this\n      }, \"ok\"))), React.createElement(Modal, {\n        show: this.state.modalfinalizado,\n        onHide: this.handleClose2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472\n        },\n        __self: this\n      }, \"Ordenes Registradas !\")), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          color: '#202156'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475\n        },\n        __self: this\n      }, \" \", this.state.cantidad_ordenes, \" ordenes han sido subidas con exito \")), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        onClick: this.handleClose2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478\n        },\n        __self: this\n      }, \"ok\"))), React.createElement(Row, {\n        style: {\n          marginTop: '1%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 3,\n        style: {\n          zIndex: 2,\n          height: 70,\n          justifyContent: 'left',\n          textAlign: \"left\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          marginBottom: '0.5rem',\n          color: '#202156',\n          fontSize: 20,\n          fontWeight: 'bold',\n          justifyContent: 'left',\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487\n        },\n        __self: this\n      }, \" Selecciona Cliente:\"), React.createElement(Autocomplete, {\n        value: this.state.value,\n        inputProps: {\n          id: 'states-autocomplete'\n        },\n        wrapperStyle: {\n          position: 'relative',\n          display: 'inline-block'\n        },\n        items: this.state.clientes,\n        getItemValue: function getItemValue(item) {\n          return item.nombre;\n        },\n        shouldItemRender: this.matchStocks,\n        onChange: function onChange(event, value) {\n          return _this5.cambiarCliente(value);\n        },\n        onSelect: this.changeTituloClientes,\n        renderMenu: function renderMenu(children) {\n          return React.createElement(\"div\", {\n            className: \"menu\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 503\n            },\n            __self: this\n          }, children);\n        },\n        renderItem: function renderItem(item, isHighlighted) {\n          return React.createElement(\"div\", {\n            className: \"item \".concat(isHighlighted ? 'item-highlighted' : ''),\n            key: item.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 508\n            },\n            __self: this\n          }, item.nombre);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: 3,\n        style: {\n          display: this.state.displayCarga,\n          marginTop: '3%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517\n        },\n        __self: this\n      }, React.createElement(CSVReader, {\n        cssClass: \"react-csv-input\",\n        onFileLoaded: this.cargarcsv,\n        parserOptions: {\n          encoding: \"ISO-8859-1\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          justifyContent: 'center',\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529\n        },\n        __self: this\n      }, React.createElement(ClipLoader, {\n        style: {\n          border: '1px solid'\n        },\n        sizeUnit: \"px\",\n        size: 150,\n        color: '#202156',\n        loading: this.state.loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530\n        },\n        __self: this\n      })))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          color: '#202156',\n          fontSize: 20,\n          fontWeight: 'bold',\n          justifyContent: 'left',\n          textAlign: 'left',\n          display: this.state.displayTabla\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542\n        },\n        __self: this\n      }, \" Cantidad de ordenes : \", this.state.cantidad_ordenes))), React.createElement(Row, {\n        style: {\n          paddingBottom: '1rem',\n          marginTop: '2%',\n          justifyContent: 'left',\n          textAlign: \"left\",\n          display: this.state.displayTabla\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        pagination: true,\n        containerStyle: {\n          width: '370%',\n          fontSize: 14\n        },\n        data: this.state.ordenes,\n        options: options,\n        selectRow: selectRow,\n        exportCSV: true,\n        search: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        dataField: \"id\",\n        isKey: true,\n        dataSort: true,\n        width: '2%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560\n        },\n        __self: this\n      }, \"Id\"), React.createElement(TableHeaderColumn, {\n        dataField: \"nombre\",\n        dataSort: true,\n        width: '12%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561\n        },\n        __self: this\n      }, \"Nombre\"), React.createElement(TableHeaderColumn, {\n        dataField: \"rut\",\n        dataSort: true,\n        width: '8%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562\n        },\n        __self: this\n      }, \"Rut\"), React.createElement(TableHeaderColumn, {\n        dataField: \"direccion\",\n        dataSort: true,\n        width: '13%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563\n        },\n        __self: this\n      }, \"Direccion\"), React.createElement(TableHeaderColumn, {\n        dataField: \"guia\",\n        dataSort: true,\n        width: '9%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564\n        },\n        __self: this\n      }, \"Guia\"), React.createElement(TableHeaderColumn, {\n        dataField: \"comuna\",\n        dataSort: true,\n        width: '4%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565\n        },\n        __self: this\n      }, \"Comuna\"), React.createElement(TableHeaderColumn, {\n        dataField: \"origen\",\n        dataSort: true,\n        width: '3%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566\n        },\n        __self: this\n      }, \"Origen\"), React.createElement(TableHeaderColumn, {\n        dataField: \"nota\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567\n        },\n        __self: this\n      }, \"Nota\"), React.createElement(TableHeaderColumn, {\n        dataField: \"telefono\",\n        dataSort: true,\n        width: '4%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568\n        },\n        __self: this\n      }, \"Telefono\"), React.createElement(TableHeaderColumn, {\n        dataField: \"mail\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569\n        },\n        __self: this\n      }, \"Mail\"), React.createElement(TableHeaderColumn, {\n        dataField: \"bultos\",\n        dataSort: true,\n        width: '3%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570\n        },\n        __self: this\n      }, \"Bultos\"), React.createElement(TableHeaderColumn, {\n        dataField: \"alto\",\n        dataSort: true,\n        width: '3%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571\n        },\n        __self: this\n      }, \"Alto\"), React.createElement(TableHeaderColumn, {\n        dataField: \"ancho\",\n        dataSort: true,\n        width: '3%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572\n        },\n        __self: this\n      }, \"Ancho\"), React.createElement(TableHeaderColumn, {\n        dataField: \"largo\",\n        dataSort: true,\n        width: '3%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573\n        },\n        __self: this\n      }, \"Largo\"), React.createElement(TableHeaderColumn, {\n        dataField: \"peso\",\n        dataSort: true,\n        width: '3%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574\n        },\n        __self: this\n      }, \"Peso\"), React.createElement(TableHeaderColumn, {\n        dataField: \"tipo_carga\",\n        dataSort: true,\n        width: '4%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575\n        },\n        __self: this\n      }, \"Tipo Carga\"), React.createElement(TableHeaderColumn, {\n        dataField: \"centro_costo\",\n        dataSort: true,\n        width: '5%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576\n        },\n        __self: this\n      }, \"Centro Costo\"), React.createElement(TableHeaderColumn, {\n        dataField: \"cod_barra\",\n        dataSort: true,\n        width: '5%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577\n        },\n        __self: this\n      }, \"Codigo de Barra\"), React.createElement(TableHeaderColumn, {\n        dataField: \"num_boleta\",\n        dataSort: true,\n        width: '6%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578\n        },\n        __self: this\n      }, \"Numero de Boleta\"), React.createElement(TableHeaderColumn, {\n        dataField: \"valor\",\n        dataSort: true,\n        width: '3%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579\n        },\n        __self: this\n      }, \"Valor\"), React.createElement(TableHeaderColumn, {\n        dataField: \"tipo_orden\",\n        dataSort: true,\n        width: '4%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580\n        },\n        __self: this\n      }, \"Tipo de Orden\"), React.createElement(TableHeaderColumn, {\n        dataField: \"tipo_negocio\",\n        dataSort: true,\n        width: '5%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581\n        },\n        __self: this\n      }, \"Tipo de Negocio\"), React.createElement(TableHeaderColumn, {\n        dataField: \"canal\",\n        dataSort: true,\n        width: '4%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582\n        },\n        __self: this\n      }, \"Canal\"), React.createElement(TableHeaderColumn, {\n        dataField: \"refrigerado\",\n        dataSort: true,\n        width: '4%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583\n        },\n        __self: this\n      }, \"Regriferado\"), React.createElement(TableHeaderColumn, {\n        dataField: \"papel\",\n        dataSort: true,\n        width: '4%',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584\n        },\n        __self: this\n      }, \"Od Papel\")))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590\n        },\n        __self: this\n      }, React.createElement(Button, {\n        style: {\n          display: this.state.displayAprobar,\n          textAlign: 'center',\n          border: '1px solid',\n          marginLeft: '40%'\n        },\n        variant: \"primary\",\n        onClick: this.cargarOrdenes.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591\n        },\n        __self: this\n      }, \"Aprobar Ordenes\"))));\n    }\n  }]);\n\n  return Cargamasiva;\n}(Component);\n\nexport default Cargamasiva;","map":{"version":3,"sources":["D:\\Users\\prico\\Desktop\\cargoex-web\\portal2\\src\\Cargamasiva.js"],"names":["React","Component","Button","Container","Row","Col","Dropdown","DropdownButton","Card","Alert","Modal","DatePicker","InfoWindow","Marker","GoogleApiWrapper","Polyline","withScriptjs","Map","BootstrapTable","TableHeaderColumn","Geocode","css","ClipLoader","CSVReader","Autocomplete","BarcodeReader","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","PieChart","Pie","Sector","Cell","ResponsiveContainer","axios","cors","ciudades","Cargamasiva","props","state","ordenes","displayTabla","cantidad_ordenes","modaldatos","modalfinalizado","modalruta","datoerror","loading","displayAprobar","displayCarga","latitude","longitude","idcliente","clientes","regiones","cargarcsv","bind","handleClose","handleClose2","cargarOrdenes","changeTituloClientes","item","value","config","headers","setState","id","getMyLocation","url","document","URL","urlseparada","split","tipo_usuario","length","replace","post","then","res","data","console","log","clientesBd","cliente","push","ID","nombre","NOMBRE","toUpperCase","get","regionesBd","ramales","datos","city","iata","IATA","name","padre","IATA_PADRE","location","window","navigator","geolocation","getCurrentPosition","position","coords","error","num","toString","lat1","lon1","lat2","lon2","unit","radlat1","Math","PI","radlat2","radlon1","radlon2","theta","radtheta","dist","sin","cos","acos","i","datetime","Date","dia","agregarUnidad","getDate","mes","getMonth","hora","getHours","minutos","getMinutes","segundos","getSeconds","diaActual","getFullYear","JSON","stringify","event","setApiKey","enableDebug","bandera","erraux","splice","error2","displayApertura","aux","verificarCiudad","bultosOrden","rut","direccion","guia","comuna","origen","lat_comuna","lng_comuna","nota","telefono","mail","bultos","alto","ancho","largo","peso","tipo_carga","centro_costo","cod_barra","num_boleta","valor","tipo_orden","tipo_negocio","canal","refrigerado","papel","sort","a","b","parseFloat","toLowerCase","indexOf","selectRow","mode","showOnlySelected","options","toolBar","createCustomToolBar","color","marginTop","zIndex","height","justifyContent","textAlign","marginBottom","fontSize","fontWeight","display","matchStocks","cambiarCliente","children","isHighlighted","encoding","border","paddingBottom","width","marginLeft"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,GAA5B,EAAiCC,GAAjC,EAAqCC,QAArC,EAA8CC,cAA9C,EAA8DC,IAA9D,EAAoEC,KAApE,EAA2EC,KAA3E,QAAwF,iBAAxF;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,gBAA7B,EAA8CC,QAA9C,EAAuDC,YAAvD,QAA0E,mBAA1E;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAAQC,cAAR,EAAwBC,iBAAxB,QAAgD,uBAAhD;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,GAAT,QAAoB,eAApB;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,YAAP,MAA0B,oBAA1B;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,SAAQC,SAAR,EAAmBC,IAAnB,EAAyBC,KAAzB,EAAgCC,KAAhC,EAAuCC,aAAvC,EAAsDC,OAAtD,EAA+DC,QAA/D,EAAyEC,GAAzE,EAA8EC,MAA9E,EAAsFC,IAAtF,EAA2FC,mBAA3F,QAAqH,UAArH;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAO,8DAAP;AACA,OAAO,4CAAP;AACA,OAAO,WAAP;AACA,SAAQC,QAAR,QAAuB,kBAAvB;;IAGMC,W;;;;;AACJ,uBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,qFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAC,EADG;AAEXC,MAAAA,YAAY,EAAC,MAFF;AAGXC,MAAAA,gBAAgB,EAAC,CAHN;AAIXC,MAAAA,UAAU,EAAC,KAJA;AAKXC,MAAAA,eAAe,EAAC,KALL;AAMXC,MAAAA,SAAS,EAAC,IANC;AAOXC,MAAAA,SAAS,EAAC,EAPC;AAQXC,MAAAA,OAAO,EAAE,KARE;AASXC,MAAAA,cAAc,EAAC,MATJ;AAUXC,MAAAA,YAAY,EAAC,MAVF;AAWXC,MAAAA,QAAQ,EAAE,EAXC;AAYXC,MAAAA,SAAS,EAAE,EAZA;AAaXC,MAAAA,SAAS,EAAC,EAbC;AAcXC,MAAAA,QAAQ,EAAC,EAdE;AAeXC,MAAAA,QAAQ,EAAC;AAfE,KAAb;AAiBA,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeC,IAAf,uDAAjB;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBD,IAAjB,uDAAnB;AACA,UAAKE,YAAL,GAAoB,MAAKA,YAAL,CAAkBF,IAAlB,uDAApB;AACA,UAAKG,aAAL,GAAqB,MAAKA,aAAL,CAAmBH,IAAnB,uDAArB;AACA,UAAKI,oBAAL,GAA4B,MAAKA,oBAAL,CAA0BJ,IAA1B,uDAA5B;AAvBgB;AA0BjB;;;;yCACoBK,I,EAAKC,K,EAAO;AAE/B,UAAIC,MAAM,GAAG;AACbC,QAAAA,OAAO,EAAE;AAAC,0BAAgB,kBAAjB;AAAoC,uBAAa,yBAAjD;AAA2E,yCAA+B;AAA1G;AADI,OAAb;AAIA,WAAKC,QAAL,CAAc;AACZH,QAAAA,KAAK,EAACD,IADM;AAEZT,QAAAA,SAAS,EAACU,KAAK,CAACI,EAFJ;AAGZjB,QAAAA,YAAY,EAAC;AAHD,OAAd;AAMD;;;yCACoB;AAAA;;AACnB,WAAKkB,aAAL;AACA,UAAIJ,MAAM,GAAG;AACbC,QAAAA,OAAO,EAAE;AAAC,0BAAgB,kBAAjB;AAAoC,uBAAa,yBAAjD;AAA2E,yCAA+B;AAA1G;AADI,OAAb;AAIA,UAAII,GAAG,GAAGC,QAAQ,CAACC,GAAnB;AACA,UAAIC,WAAW,GAAGH,GAAG,CAACI,KAAJ,CAAU,eAAV,CAAlB;AACA,UAAIC,YAAY,GAACF,WAAW,CAACA,WAAW,CAACG,MAAZ,GAAmB,CAApB,CAA5B;AACAD,MAAAA,YAAY,GAACA,YAAY,CAACE,OAAb,CAAqB,GAArB,EAAyB,EAAzB,CAAb;AACAzC,MAAAA,KAAK,CAAC0C,IAAN,CAAW,qCAAX,EAAiDb,MAAjD,EACGc,IADH,CACQ,UAAAC,GAAG,EAAI;AACX,YAAIzB,QAAQ,GAAEyB,GAAG,CAACC,IAAlB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAY5B,QAAZ;AACA,YAAM6B,UAAU,GAAC,EAAjB;;AAEA,YAAGT,YAAY,KAAG,OAAlB,EAA0B;AAAA;AAAA;AAAA;;AAAA;AACxB,iCAAmBpB,QAAnB,8HAA4B;AAAA,kBAApB8B,OAAoB;AAC1BD,cAAAA,UAAU,CAACE,IAAX,CAAgB;AAAClB,gBAAAA,EAAE,EAAEiB,OAAO,CAACE,EAAb;AAAgBC,gBAAAA,MAAM,EAAEH,OAAO,CAACI,MAAR,CAAeC,WAAf;AAAxB,eAAhB;AACD;AAHuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIzB,SAJD,MAIK;AAAA;AAAA;AAAA;;AAAA;AACL,kCAAmBnC,QAAnB,mIAA4B;AAAA,kBAApB8B,QAAoB;;AAC1B,kBAAGA,QAAO,CAACE,EAAR,GAAW,EAAX,KAAgBZ,YAAY,GAAC,EAAhC,EAAmC;AACjCO,gBAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,gBAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;AACAD,gBAAAA,UAAU,CAACE,IAAX,CAAgB;AAAClB,kBAAAA,EAAE,EAAEiB,QAAO,CAACE,EAAb;AAAgBC,kBAAAA,MAAM,EAAEH,QAAO,CAACI,MAAR,CAAeC,WAAf;AAAxB,iBAAhB;AACD;AACF;AAPI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQJ;;AACDR,QAAAA,OAAO,CAACC,GAAR,CAAYC,UAAZ;;AACA,QAAA,MAAI,CAACjB,QAAL,CAAc;AAAEZ,UAAAA,QAAQ,EAAC6B;AAAX,SAAd;AACD,OAtBH;AAuBEhD,MAAAA,KAAK,CAACuD,GAAN,CAAU,gDAAV,EAA2D1B,MAA3D,EACGc,IADH,CACQ,UAAAC,GAAG,EAAI;AACX,YAAM1C,QAAQ,GAAG0C,GAAG,CAACC,IAArB;AACA,YAAMW,UAAU,GAAC,EAAjB;AACA,YAAMC,OAAO,GAAG,EAAhB;AACAX,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAY7C,QAAZ;AALW;AAAA;AAAA;;AAAA;AAMX,gCAAgBA,QAAQ,CAACwD,KAAzB,mIAA+B;AAAA,gBAAvBC,IAAuB;AAE7BH,YAAAA,UAAU,CAACN,IAAX,CAAgB;AAACU,cAAAA,IAAI,EAAED,IAAI,CAACE,IAAZ;AAAiBC,cAAAA,IAAI,EAAEH,IAAI,CAACN,MAAL,CAAYC,WAAZ,EAAvB;AAAiDS,cAAAA,KAAK,EAACJ,IAAI,CAACK;AAA5D,aAAhB;AAED;AAVU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWX,QAAA,MAAI,CAACjC,QAAL,CAAc;AAAEX,UAAAA,QAAQ,EAACoC;AAAX,SAAd;AACD,OAbH;AAcF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCD;;;oCACe;AAAA;;AACd,UAAMS,QAAQ,GAAGC,MAAM,CAACC,SAAP,IAAoBD,MAAM,CAACC,SAAP,CAAiBC,WAAtD;;AAEA,UAAIH,QAAJ,EAAc;AACZA,QAAAA,QAAQ,CAACI,kBAAT,CAA4B,UAACC,QAAD,EAAc;AACxC,UAAA,MAAI,CAACvC,QAAL,CAAc;AACZf,YAAAA,QAAQ,EAAEsD,QAAQ,CAACC,MAAT,CAAgBvD,QADd;AAEZC,YAAAA,SAAS,EAAEqD,QAAQ,CAACC,MAAT,CAAgBtD;AAFf,WAAd;;AAIA6B,UAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAYuB,QAAQ,CAACC,MAAT,CAAgBvD,QAA5B;AACA8B,UAAAA,OAAO,CAACC,GAAR,CAAYuB,QAAQ,CAACC,MAAT,CAAgBtD,SAA5B;AACD,SARD,EAQG,UAACuD,KAAD,EAAW;AACZ,UAAA,MAAI,CAACzC,QAAL,CAAc;AAAEf,YAAAA,QAAQ,EAAE,cAAZ;AAA4BC,YAAAA,SAAS,EAAE;AAAvC,WAAd;AACD,SAVD;AAWD;AAEF;;;kCACa;AACZ,WAAKc,QAAL,CAAc;AAAEtB,QAAAA,UAAU,EAAE;AAAd,OAAd;AACD;;;mCACc;AACb,WAAKsB,QAAL,CAAc;AAAErB,QAAAA,eAAe,EAAE;AAAnB,OAAd;AACD;;;kCACa+D,G,EAAI;AAChB3B,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAa0B,GAAG,CAACC,QAAJ,GAAelC,MAAxC;;AACA,UAAGiC,GAAG,CAACC,QAAJ,GAAelC,MAAf,KAAyB,CAA5B,EAA8B;AAC5B,eAAQ,MAAIiC,GAAZ;AACD,OAFD,MAEK;AACH,eAAOA,GAAP;AACD;AACF;;;sCACiBE,I,EAAMC,I,EAAMC,I,EAAMC,I,EAAMC,I,EAAM;AAChD,UAAIC,OAAO,GAAGC,IAAI,CAACC,EAAL,GAAUP,IAAV,GAAe,GAA7B;AACA,UAAIQ,OAAO,GAAGF,IAAI,CAACC,EAAL,GAAUL,IAAV,GAAe,GAA7B;AACA,UAAIO,OAAO,GAAGH,IAAI,CAACC,EAAL,GAAUN,IAAV,GAAe,GAA7B;AACA,UAAIS,OAAO,GAAGJ,IAAI,CAACC,EAAL,GAAUJ,IAAV,GAAe,GAA7B;AACA,UAAIQ,KAAK,GAAGV,IAAI,GAACE,IAAjB;AACA,UAAIS,QAAQ,GAAGN,IAAI,CAACC,EAAL,GAAUI,KAAV,GAAgB,GAA/B;AACA,UAAIE,IAAI,GAAGP,IAAI,CAACQ,GAAL,CAAST,OAAT,IAAoBC,IAAI,CAACQ,GAAL,CAASN,OAAT,CAApB,GAAwCF,IAAI,CAACS,GAAL,CAASV,OAAT,IAAoBC,IAAI,CAACS,GAAL,CAASP,OAAT,CAApB,GAAwCF,IAAI,CAACS,GAAL,CAASH,QAAT,CAA3F;AACAC,MAAAA,IAAI,GAAGP,IAAI,CAACU,IAAL,CAAUH,IAAV,CAAP;AACAA,MAAAA,IAAI,GAAGA,IAAI,GAAG,GAAP,GAAWP,IAAI,CAACC,EAAvB;AACAM,MAAAA,IAAI,GAAGA,IAAI,GAAG,EAAP,GAAY,MAAnB;;AACA,UAAIT,IAAI,IAAE,GAAV,EAAe;AAAES,QAAAA,IAAI,GAAGA,IAAI,GAAG,QAAd;AAAwB;;AACzC,UAAIT,IAAI,IAAE,GAAV,EAAe;AAAES,QAAAA,IAAI,GAAGA,IAAI,GAAG,MAAd;AAAsB;;AACvC,aAAOA,IAAP;AACD;;;oCACe7B,I,EAAK;AACnB,WAAM,IAAIiC,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG1F,QAAQ,CAACsC,MAA9B,EAAsCoD,CAAC,EAAvC,EAA2C;AACzC,YAAG1F,QAAQ,CAAC0F,CAAD,CAAR,CAAY/B,IAAZ,CAAiBP,WAAjB,OAAmCK,IAAI,CAACL,WAAL,EAAnC,IAAyDpD,QAAQ,CAAC0F,CAAD,CAAR,CAAYvC,MAAZ,CAAmBC,WAAnB,OAAqCK,IAAI,CAACL,WAAL,EAAjG,EAAoH;AAClH,iBAAO,IAAP;AACD;AACF;;AACD,aAAO,KAAP;AACD;;;gCACWK,I,EAAK;AACT,WAAM,IAAIiC,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG1F,QAAQ,CAACsC,MAA9B,EAAsCoD,CAAC,EAAvC,EAA2C;AACvC,YAAG1F,QAAQ,CAAC0F,CAAD,CAAR,CAAY/B,IAAZ,CAAiBP,WAAjB,OAAmCK,IAAI,CAACL,WAAL,EAAnC,IAAyDpD,QAAQ,CAAC0F,CAAD,CAAR,CAAYvC,MAAZ,CAAmBC,WAAnB,OAAqCK,IAAI,CAACL,WAAL,EAAjG,EAAoH;AAChH,iBAAOpD,QAAQ,CAAC0F,CAAD,CAAR,CAAY/B,IAAnB;AACH;AACJ;;AACD,aAAO,KAAP;AACP;;;oCACgB;AAAA;;AACbf,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA,WAAKhB,QAAL,CAAc;AACZlB,QAAAA,OAAO,EAAC,IADI;AAEZN,QAAAA,YAAY,EAAC,MAFD;AAGZO,QAAAA,cAAc,EAAC;AAHH,OAAd;AAKA,UAAII,SAAS,GAAC,KAAKb,KAAL,CAAWa,SAAzB;AACA4B,MAAAA,OAAO,CAACC,GAAR,CAAY7B,SAAZ;AACA,UAAIZ,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAAzB,CATa,CAUf;;AACE,UAAIuF,QAAQ,GAAG,IAAIC,IAAJ,EAAf;AACA,UAAIC,GAAG,GAAG,KAAKC,aAAL,CAAmBH,QAAQ,CAACI,OAAT,EAAnB,CAAV;AACA,UAAIC,GAAG,GAAG,KAAKF,aAAL,CAAmBH,QAAQ,CAACM,QAAT,KAAoB,CAAvC,CAAV;AACA,UAAIC,IAAI,GAAC,KAAKJ,aAAL,CAAmBH,QAAQ,CAACQ,QAAT,EAAnB,CAAT;AACA,UAAIC,OAAO,GAAE,KAAKN,aAAL,CAAmBH,QAAQ,CAACU,UAAT,EAAnB,CAAb;AACA,UAAIC,QAAQ,GAAE,KAAKR,aAAL,CAAmBH,QAAQ,CAACY,UAAT,EAAnB,CAAd;AACF,UAAIC,SAAS,GAAEb,QAAQ,CAACc,WAAT,KAAwB,GAAxB,GAA4BT,GAA5B,GAAgC,GAAhC,GAAoCH,GAApC,GAAwC,GAAxC,GAA4CK,IAA5C,GAAiD,GAAjD,GAAqDE,OAArD,GAA6D,GAA7D,GAAiEE,QAAhF;AACE,UAAI3E,MAAM,GAAG;AACbC,QAAAA,OAAO,EAAE;AAAC,0BAAgB,kBAAjB;AAAoC,uBAAa,yBAAjD;AAA2E,yCAA+B;AAA1G;AADI,OAAb;AAGA,UAAIe,IAAI,GAAG+D,IAAI,CAACC,SAAL,CAAe;AACxB3F,QAAAA,SAAS,EAAEA,SADa;AAExBZ,QAAAA,OAAO,EAACA,OAFgB;AAGxByF,QAAAA,GAAG,EAACW;AAHoB,OAAf,CAAX;AAMA5D,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA/C,MAAAA,KAAK,CAAC0C,IAAN,CAAW,uCAAX,EAAmDG,IAAnD,EAAwDhB,MAAxD,EACGc,IADH,CACQ,UAAAC,GAAG,EAAI;AACX,QAAA,MAAI,CAACb,QAAL,CAAc;AACZlB,UAAAA,OAAO,EAAC,KADI;AAEZH,UAAAA,eAAe,EAAE;AAFL,SAAd,EADW,CAKX;;AACA;;;;;;;;;;;;AAaA;;;;;;;;;;AASD,OA7BH;AA8BD;;;8BACSoG,K,EAAM;AACdhE,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,UAAIzC,OAAO,GAAG,EAAd;AACAvB,MAAAA,OAAO,CAACgI,SAAR,CAAkB,yCAAlB;AACAhI,MAAAA,OAAO,CAACiI,WAAR;AACA,UAAIC,OAAO,GAAE,IAAb;AACA,UAAIzC,KAAK,GAAC,mIAAV;AACA,UAAI0C,MAAM,GAAC,EAAX;AACApE,MAAAA,OAAO,CAACC,GAAR,CAAY+D,KAAZ;AACAhE,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;;AACA,UAAG+D,KAAK,CAACA,KAAK,CAACtE,MAAN,GAAa,CAAd,CAAL,CAAsBA,MAAtB,GAA8B,CAAjC,EAAmC;AACjCM,QAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ;AACA+D,QAAAA,KAAK,CAACK,MAAN,CAAaL,KAAK,CAACtE,MAAN,GAAa,CAA1B,EAA6B,CAA7B;AACD;;AACDM,MAAAA,OAAO,CAACC,GAAR,CAAY+D,KAAK,CAACA,KAAK,CAACtE,MAAN,GAAa,CAAd,CAAjB;AACA,WAAKT,QAAL,CAAc;AACEvB,QAAAA,gBAAgB,EAACsG,KAAK,CAACtE,MAAN,GAAa;AADhC,OAAd;;AAEA,UAAGsE,KAAK,CAAC,CAAD,CAAL,CAAStE,MAAT,KAAoB,EAAvB,EAA2B;AACzB,YAAI4E,MAAM,GAAG,kGAAb;AACAH,QAAAA,OAAO,GAAG,KAAV;AAEA,aAAKlF,QAAL,CAAc;AAAEtB,UAAAA,UAAU,EAAE,IAAd;AACEG,UAAAA,SAAS,EAAEwG,MADb;AAEE7G,UAAAA,YAAY,EAAC,MAFf;AAGE8G,UAAAA,eAAe,EAAC;AAHlB,SAAd;AAKD,OATD,MASK;AACL,aAAI,IAAIC,GAAG,GAAC,CAAZ,EAAeA,GAAG,GAACR,KAAK,CAACtE,MAAzB,EAAgC8E,GAAG,EAAnC,EAAsC;AAClC,cAAGR,KAAK,CAACQ,GAAD,CAAL,CAAW,CAAX,MAAgB,EAAhB,IAAsBR,KAAK,CAACQ,GAAD,CAAL,CAAW,CAAX,MAAgB,EAAtC,IAA4CR,KAAK,CAACQ,GAAD,CAAL,CAAW,CAAX,MAAgB,EAA5D,IAAkER,KAAK,CAACQ,GAAD,CAAL,CAAW,CAAX,MAAgB,EAAlF,IAAwFR,KAAK,CAACQ,GAAD,CAAL,CAAW,CAAX,MAAgB,EAAxG,IAA8GR,KAAK,CAACQ,GAAD,CAAL,CAAW,CAAX,MAAgB,EAAjI,EAAoI;AAChI,gBAAGJ,MAAM,CAAC1E,MAAP,GAAc,EAAjB,EAAoB;AAClB0E,cAAAA,MAAM,IAAI,SAAOI,GAAG,GAAC,CAAX,CAAV;AACD,aAFD,MAEK;AACHJ,cAAAA,MAAM,IAAI,KAAV;AACD;;AACDpE,YAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAD,YAAAA,OAAO,CAACC,GAAR,CAAY+D,KAAK,CAACQ,GAAD,CAAjB;AACAL,YAAAA,OAAO,GAAG,KAAV;AAEH,WAVD,MAUM,IAAI,CAAC,KAAKM,eAAL,CAAqBT,KAAK,CAACQ,GAAD,CAAL,CAAW,CAAX,CAArB,CAAD,IAAwC,CAAC,KAAKC,eAAL,CAAqBT,KAAK,CAACQ,GAAD,CAAL,CAAW,CAAX,CAArB,CAA7C,EAAiF;AACrF,gBAAGJ,MAAM,CAAC1E,MAAP,GAAc,EAAjB,EAAsB;AACpB0E,cAAAA,MAAM,IAAI,SAAOI,GAAG,GAAC,CAAX,CAAV;AACD,aAFD,MAEK;AACHJ,cAAAA,MAAM,IAAI,KAAV;AACD;;AACDpE,YAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAD,YAAAA,OAAO,CAACC,GAAR,CAAY+D,KAAK,CAACQ,GAAD,CAAjB;AACAL,YAAAA,OAAO,GAAG,KAAV;AACD,WATK,MAUF;AACF,gBAAIO,WAAW,GAAGV,KAAK,CAACQ,GAAD,CAAL,CAAW,CAAX,IAAc,EAAhC;;AACA,gBAAIE,WAAW,KAAG,GAAlB,EAAsB;AACpBA,cAAAA,WAAW,GAAG,GAAd;AACD;;AACDlH,YAAAA,OAAO,CAAC4C,IAAR,CAAa;AAAClB,cAAAA,EAAE,EAACsF,GAAJ;AAAQlE,cAAAA,MAAM,EAAC0D,KAAK,CAACQ,GAAD,CAAL,CAAW,CAAX,EAAchE,WAAd,EAAf;AAA2CmE,cAAAA,GAAG,EAACX,KAAK,CAACQ,GAAD,CAAL,CAAW,CAAX,CAA/C;AAA6DI,cAAAA,SAAS,EAACZ,KAAK,CAACQ,GAAD,CAAL,CAAW,CAAX,CAAvE;AAAqFK,cAAAA,IAAI,EAACb,KAAK,CAACQ,GAAD,CAAL,CAAW,CAAX,CAA1F;AACCM,cAAAA,MAAM,EAACd,KAAK,CAACQ,GAAD,CAAL,CAAW,CAAX,EAAchE,WAAd,EADR;AACoCuE,cAAAA,MAAM,EAACf,KAAK,CAACQ,GAAD,CAAL,CAAW,CAAX,EAAchE,WAAd,EAD3C;AACuEwE,cAAAA,UAAU,EAAC,GADlF;AACsFC,cAAAA,UAAU,EAAC,GADjG;AACqGC,cAAAA,IAAI,EAAClB,KAAK,CAACQ,GAAD,CAAL,CAAW,CAAX,EAAchE,WAAd,EAD1G;AAEC2E,cAAAA,QAAQ,EAACnB,KAAK,CAACQ,GAAD,CAAL,CAAW,CAAX,CAFV;AAEwBY,cAAAA,IAAI,EAACpB,KAAK,CAACQ,GAAD,CAAL,CAAW,CAAX,CAF7B;AAGCa,cAAAA,MAAM,EAACX,WAHR;AAGoBY,cAAAA,IAAI,EAACtB,KAAK,CAACQ,GAAD,CAAL,CAAW,EAAX,CAHzB;AAGwCe,cAAAA,KAAK,EAACvB,KAAK,CAACQ,GAAD,CAAL,CAAW,EAAX,CAH9C;AAG6DgB,cAAAA,KAAK,EAACxB,KAAK,CAACQ,GAAD,CAAL,CAAW,EAAX,CAHnE;AAICiB,cAAAA,IAAI,EAACzB,KAAK,CAACQ,GAAD,CAAL,CAAW,EAAX,CAJN;AAIqBkB,cAAAA,UAAU,EAAC1B,KAAK,CAACQ,GAAD,CAAL,CAAW,EAAX,EAAehE,WAAf,EAJhC;AAI6DmF,cAAAA,YAAY,EAAC3B,KAAK,CAACQ,GAAD,CAAL,CAAW,EAAX,EAAehE,WAAf,EAJ1E;AAKCoF,cAAAA,SAAS,EAAC5B,KAAK,CAACQ,GAAD,CAAL,CAAW,EAAX,CALX;AAMCqB,cAAAA,UAAU,EAAC7B,KAAK,CAACQ,GAAD,CAAL,CAAW,EAAX,CANZ;AAM2BsB,cAAAA,KAAK,EAAC9B,KAAK,CAACQ,GAAD,CAAL,CAAW,EAAX,CANjC;AAMgDuB,cAAAA,UAAU,EAAC/B,KAAK,CAACQ,GAAD,CAAL,CAAW,EAAX,EAAehE,WAAf,EAN3D;AAMwFwF,cAAAA,YAAY,EAAChC,KAAK,CAACQ,GAAD,CAAL,CAAW,EAAX,EAAehE,WAAf,EANrG;AAOCyF,cAAAA,KAAK,EAACjC,KAAK,CAACQ,GAAD,CAAL,CAAW,EAAX,EAAehE,WAAf,EAPP;AAOoC0F,cAAAA,WAAW,EAAClC,KAAK,CAACQ,GAAD,CAAL,CAAW,EAAX,EAAehE,WAAf,EAPhD;AAO6E2F,cAAAA,KAAK,EAACnC,KAAK,CAACQ,GAAD,CAAL,CAAW,EAAX,EAAehE,WAAf;AAPnF,aAAb;AAScR,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,YAAAA,OAAO,CAACC,GAAR,CAAYkE,OAAZ;AACV;;;;AAKS;AACF;;AACD3G,QAAAA,OAAO,CAAC4I,IAAR,CAAa,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACxB,iBAAOC,UAAU,CAACF,CAAC,CAACnH,EAAH,CAAV,GAAmBqH,UAAU,CAACD,CAAC,CAACpH,EAAH,CAApC;AACD,SAFH;;AAGA,YAAGiF,OAAH,EAAW;AACT,eAAKlF,QAAL,CAAc;AAAEzB,YAAAA,OAAO,EAACA,OAAV;AACEC,YAAAA,YAAY,EAAC,OADf;AAEEO,YAAAA,cAAc,EAAC;AAFjB,WAAd;AAGD,SAJD,MAIK;AACH,eAAKiB,QAAL,CAAc;AAAEtB,YAAAA,UAAU,EAAE,IAAd;AACEG,YAAAA,SAAS,EAAE4D,KAAK,GAAC,GAAN,GAAU0C,MADvB;AAEE3G,YAAAA,YAAY,EAAC,MAFf;AAGE8G,YAAAA,eAAe,EAAC,MAHlB;AAIEvG,YAAAA,cAAc,EAAC;AAJjB,WAAd;AAOD;AACjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoEF;AAEC;;;gCACWT,K,EAAOuB,K,EAAO;AACxB,aAEEvB,KAAK,CAAC+C,MAAN,CAAakG,WAAb,GAA2BC,OAA3B,CAAmC3H,KAAK,CAAC0H,WAAN,EAAnC,MAA4D,CAAC,CAF/D;AAGD;;;mCACc1H,K,EAAM;AACnB,WAAKG,QAAL,CAAc;AACZhB,QAAAA,YAAY,EAAC,MADD;AAEZa,QAAAA,KAAK,EAACA;AAFM,OAAd;AAID;;;wCACmB,CACnB;;;6BAEQ;AAAA;;AACP,UAAM4H,SAAS,GAAG;AACjBC,QAAAA,IAAI,EAAE,UADW;AAEjBC,QAAAA,gBAAgB,EAAE;AAFD,OAAlB;AAID,UAAMC,OAAO,GAAG;AACdC,QAAAA,OAAO,EAAE,KAAKC;AADA,OAAhB;AAGC,aAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAE,KAAKxJ,KAAL,CAAWI,UAAxB;AAAoC,QAAA,MAAM,EAAE,KAAKc,WAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,EAIE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,KAAK,EAAE;AAACuI,UAAAA,KAAK,EAAC;AAAP,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+B,KAAKzJ,KAAL,CAAWO,SAA1C,CADF,CAJF,EAOE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,OAAO,EAAE,KAAKW,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,CAPF,CAFJ,EAgBI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAE,KAAKlB,KAAL,CAAWK,eAAxB;AAAyC,QAAA,MAAM,EAAE,KAAKc,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,CADF,EAIE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,KAAK,EAAE;AAACsI,UAAAA,KAAK,EAAC;AAAP,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAgC,KAAKzJ,KAAL,CAAWG,gBAA3C,yCADF,CAJF,EAOE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,OAAO,EAAE,KAAKgB,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,CAPF,CAhBJ,EA+BE,oBAAC,GAAD;AAAK,QAAA,KAAK,EAAE;AAACuI,UAAAA,SAAS,EAAC;AAAX,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAC,CAAR;AAAUC,UAAAA,MAAM,EAAC,EAAjB;AAAqBC,UAAAA,cAAc,EAAE,MAArC;AAA4CC,UAAAA,SAAS,EAAC;AAAtD,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAG,QAAA,KAAK,EAAE;AAACC,UAAAA,YAAY,EAAC,QAAd;AACVN,UAAAA,KAAK,EAAE,SADG;AACOO,UAAAA,QAAQ,EAAC,EADhB;AACoBC,UAAAA,UAAU,EAAE,MADhC;AAEVJ,UAAAA,cAAc,EAAE,MAFN;AAEaC,UAAAA,SAAS,EAAC;AAFvB,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADA,EAOA,oBAAC,YAAD;AACI,QAAA,KAAK,EAAG,KAAK9J,KAAL,CAAWuB,KADvB;AAEI,QAAA,UAAU,EAAE;AAAEI,UAAAA,EAAE,EAAE;AAAN,SAFhB;AAGI,QAAA,YAAY,EAAE;AAAEsC,UAAAA,QAAQ,EAAE,UAAZ;AAAwBiG,UAAAA,OAAO,EAAE;AAAjC,SAHlB;AAII,QAAA,KAAK,EAAG,KAAKlK,KAAL,CAAWc,QAJvB;AAKI,QAAA,YAAY,EAAG,sBAAAQ,IAAI;AAAA,iBAAIA,IAAI,CAACyB,MAAT;AAAA,SALvB;AAMI,QAAA,gBAAgB,EAAG,KAAKoH,WAN5B;AAOI,QAAA,QAAQ,EAAE,kBAAC1D,KAAD,EAAQlF,KAAR;AAAA,iBAAkB,MAAI,CAAC6I,cAAL,CAAoB7I,KAApB,CAAlB;AAAA,SAPd;AAQI,QAAA,QAAQ,EAAE,KAAKF,oBARnB;AASI,QAAA,UAAU,EAAG,oBAAAgJ,QAAQ;AAAA,iBACnB;AAAK,YAAA,SAAS,EAAG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACEA,QADF,CADmB;AAAA,SATzB;AAcI,QAAA,UAAU,EAAG,oBAAC/I,IAAD,EAAOgJ,aAAP;AAAA,iBACX;AACE,YAAA,SAAS,iBAAUA,aAAa,GAAG,kBAAH,GAAwB,EAA/C,CADX;AAEE,YAAA,GAAG,EAAGhJ,IAAI,CAACK,EAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAGIL,IAAI,CAACyB,MAHT,CADW;AAAA,SAdjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPA,CADA,EAgCA,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,KAAK,EAAE;AAACmH,UAAAA,OAAO,EAAC,KAAKlK,KAAL,CAAWU,YAApB;AAAiCgJ,UAAAA,SAAS,EAAC;AAA3C,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM,oBAAC,SAAD;AACE,QAAA,QAAQ,EAAC,iBADX;AAEE,QAAA,YAAY,EAAE,KAAK1I,SAFrB;AAGE,QAAA,aAAa,EAAE;AACXuJ,UAAAA,QAAQ,EAAE;AADC,SAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADN,CAhCA,CA/BF,EAyEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,KAAK,EAAE;AAACV,UAAAA,cAAc,EAAE,QAAjB;AAA0BC,UAAAA,SAAS,EAAC;AAApC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AACE,QAAA,KAAK,EAAE;AAACU,UAAAA,MAAM,EAAE;AAAT,SADT;AAEE,QAAA,QAAQ,EAAE,IAFZ;AAGE,QAAA,IAAI,EAAE,GAHR;AAIE,QAAA,KAAK,EAAE,SAJT;AAKE,QAAA,OAAO,EAAE,KAAKxK,KAAL,CAAWQ,OALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADJ,CADA,CAzEF,EAsFE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,KAAK,EAAE;AACViJ,UAAAA,KAAK,EAAE,SADG;AACOO,UAAAA,QAAQ,EAAC,EADhB;AACoBC,UAAAA,UAAU,EAAE,MADhC;AAEVJ,UAAAA,cAAc,EAAE,MAFN;AAEaC,UAAAA,SAAS,EAAC,MAFvB;AAE8BI,UAAAA,OAAO,EAAC,KAAKlK,KAAL,CAAWE;AAFjD,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAGyB,KAAKF,KAAL,CAAWG,gBAHpC,CADF,CADA,CAtFF,EA+FE,oBAAC,GAAD;AAAK,QAAA,KAAK,EAAE;AAAEsK,UAAAA,aAAa,EAAC,MAAhB;AAAuBf,UAAAA,SAAS,EAAC,IAAjC;AAAsCG,UAAAA,cAAc,EAAE,MAAtD;AAA6DC,UAAAA,SAAS,EAAC,MAAvE;AAA8EI,UAAAA,OAAO,EAAC,KAAKlK,KAAL,CAAWE;AAAjG,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AACA,QAAA,UAAU,MADV;AAEA,QAAA,cAAc,EAAE;AAACwK,UAAAA,KAAK,EAAE,MAAR;AAAeV,UAAAA,QAAQ,EAAC;AAAxB,SAFhB;AAGA,QAAA,IAAI,EAAG,KAAKhK,KAAL,CAAWC,OAHlB;AAIA,QAAA,OAAO,EAAGqJ,OAJV;AAKA,QAAA,SAAS,EAAGH,SALZ;AAMA,QAAA,SAAS,MANT;AAOA,QAAA,MAAM,MAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASA,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,IAA7B;AAAkC,QAAA,KAAK,EAAG,IAA1C;AAAiD,QAAA,QAAQ,EAAG,IAA5D;AAAmE,QAAA,KAAK,EAAE,IAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATA,EAUA,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,QAA7B;AAAsC,QAAA,QAAQ,EAAG,IAAjD;AAAwD,QAAA,KAAK,EAAE,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVA,EAWA,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,KAA7B;AAAmC,QAAA,QAAQ,EAAG,IAA9C;AAAqD,QAAA,KAAK,EAAE,IAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAXA,EAYA,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,WAA7B;AAAyC,QAAA,QAAQ,EAAG,IAApD;AAA2D,QAAA,KAAK,EAAE,KAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAZA,EAaA,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,MAA7B;AAAoC,QAAA,QAAQ,EAAG,IAA/C;AAAuD,QAAA,KAAK,EAAE,IAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbA,EAcA,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,QAA7B;AAAsC,QAAA,QAAQ,EAAG,IAAjD;AAAyD,QAAA,KAAK,EAAE,IAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdA,EAeA,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,QAA7B;AAAsC,QAAA,QAAQ,EAAG,IAAjD;AAAwD,QAAA,KAAK,EAAE,IAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfA,EAgBA,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,MAA7B;AAAoC,QAAA,QAAQ,EAAG,IAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBA,EAiBA,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,UAA7B;AAAwC,QAAA,QAAQ,EAAG,IAAnD;AAA0D,QAAA,KAAK,EAAE,IAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAjBA,EAkBA,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,MAA7B;AAAoC,QAAA,QAAQ,EAAG,IAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBA,EAmBA,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,QAA7B;AAAsC,QAAA,QAAQ,EAAG,IAAjD;AAAwD,QAAA,KAAK,EAAE,IAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnBA,EAoBA,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,MAA7B;AAAoC,QAAA,QAAQ,EAAG,IAA/C;AAAuD,QAAA,KAAK,EAAE,IAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBA,EAqBA,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,OAA7B;AAAqC,QAAA,QAAQ,EAAG,IAAhD;AAAwD,QAAA,KAAK,EAAE,IAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBArBA,EAsBA,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,OAA7B;AAAqC,QAAA,QAAQ,EAAG,IAAhD;AAAwD,QAAA,KAAK,EAAE,IAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAtBA,EAuBA,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,MAA7B;AAAoC,QAAA,QAAQ,EAAG,IAA/C;AAAuD,QAAA,KAAK,EAAE,IAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvBA,EAwBA,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,YAA7B;AAA0C,QAAA,QAAQ,EAAG,IAArD;AAA4D,QAAA,KAAK,EAAE,IAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAxBA,EAyBA,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,cAA7B;AAA4C,QAAA,QAAQ,EAAG,IAAvD;AAA+D,QAAA,KAAK,EAAE,IAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAzBA,EA0BA,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,WAA7B;AAAyC,QAAA,QAAQ,EAAG,IAApD;AAA4D,QAAA,KAAK,EAAE,IAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BA1BA,EA2BA,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,YAA7B;AAA0C,QAAA,QAAQ,EAAG,IAArD;AAA6D,QAAA,KAAK,EAAE,IAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BA3BA,EA4BA,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,OAA7B;AAAqC,QAAA,QAAQ,EAAG,IAAhD;AAAwD,QAAA,KAAK,EAAE,IAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBA5BA,EA6BA,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,YAA7B;AAA0C,QAAA,QAAQ,EAAG,IAArD;AAA4D,QAAA,KAAK,EAAE,IAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBA7BA,EA8BA,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,cAA7B;AAA4C,QAAA,QAAQ,EAAG,IAAvD;AAA8D,QAAA,KAAK,EAAE,IAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BA9BA,EA+BA,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,OAA7B;AAAqC,QAAA,QAAQ,EAAG,IAAhD;AAAuD,QAAA,KAAK,EAAE,IAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBA/BA,EAgCA,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,aAA7B;AAA2C,QAAA,QAAQ,EAAG,IAAtD;AAA6D,QAAA,KAAK,EAAE,IAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAhCA,EAiCA,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,OAA7B;AAAqC,QAAA,QAAQ,EAAG,IAAhD;AAAuD,QAAA,KAAK,EAAE,IAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAjCA,CADF,CADF,CA/FF,EAuIE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAAEe,UAAAA,OAAO,EAAC,KAAKlK,KAAL,CAAWS,cAArB;AAAoCqJ,UAAAA,SAAS,EAAC,QAA9C;AAAwDU,UAAAA,MAAM,EAAE,WAAhE;AAA4EG,UAAAA,UAAU,EAAC;AAAvF,SAAf;AACE,QAAA,OAAO,EAAC,SADV;AAEE,QAAA,OAAO,EAAE,KAAKvJ,aAAL,CAAmBH,IAAnB,CAAwB,IAAxB,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADA,CADF,CAvIF,CAFF;AAuJD;;;;EArkBuB1D,S;;AAykB1B,eAAeuC,WAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, Container, Row, Col,Dropdown,DropdownButton, Card, Alert, Modal } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { InfoWindow, Marker, GoogleApiWrapper,Polyline,withScriptjs} from 'google-maps-react';\r\nimport Map from './Map';\r\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\r\nimport Geocode from \"react-geocode\";\r\nimport { css } from '@emotion/core';\r\nimport { ClipLoader } from 'react-spinners';\r\nimport CSVReader from \"react-csv-reader\";\r\nimport Autocomplete from  'react-autocomplete';\r\nimport BarcodeReader from 'react-barcode-reader'\r\nimport {AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, PieChart, Pie, Sector, Cell,ResponsiveContainer} from 'recharts';\r\nimport axios from 'axios';\r\nimport cors from 'cors';\r\nimport 'react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './App.css';\r\nimport {ciudades} from \"./constants/json\";\r\n\r\n\r\nclass Cargamasiva extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      ordenes:[],\r\n      displayTabla:'none',\r\n      cantidad_ordenes:0,\r\n      modaldatos:false,\r\n      modalfinalizado:false,\r\n      modalruta:true,\r\n      datoerror:'',\r\n      loading: false,\r\n      displayAprobar:'none',\r\n      displayCarga:'none',\r\n      latitude: '',\r\n      longitude: '',\r\n      idcliente:'',\r\n      clientes:[],\r\n      regiones:[]\r\n    }\r\n    this.cargarcsv = this.cargarcsv.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.handleClose2 = this.handleClose2.bind(this);\r\n    this.cargarOrdenes = this.cargarOrdenes.bind(this);\r\n    this.changeTituloClientes = this.changeTituloClientes.bind(this);\r\n\r\n\r\n  }\r\n  changeTituloClientes(item,value) {\r\n\r\n    var config = {\r\n    headers: {\"Content-Type\": \"application/json\",\"X-API-KEY\": \"55IcsddHxiy2E3q653RpYtb\",\"Access-Control-Allow-Origin\": \"*\"}\r\n    };\r\n\r\n    this.setState({\r\n      value:item,\r\n      idcliente:value.id,\r\n      displayCarga:'block'\r\n    });\r\n\r\n  }\r\n  componentWillMount() {\r\n    this.getMyLocation();\r\n    var config = {\r\n    headers: {\"Content-Type\": \"application/json\",\"X-API-KEY\": \"55IcsddHxiy2E3q653RpYtb\",\"Access-Control-Allow-Origin\": \"*\"}\r\n    };\r\n\r\n    var url = document.URL ;\r\n    var urlseparada = url.split('tipo_usuario=');\r\n    var tipo_usuario=urlseparada[urlseparada.length-1];\r\n    tipo_usuario=tipo_usuario.replace('#','');\r\n    axios.post(\"http://app.cargoex.cl:5000/clientes\",config)\r\n      .then(res => {\r\n        var clientes= res.data;\r\n        console.log('cliente de bd');\r\n        console.log(clientes);\r\n        const clientesBd=[];\r\n\r\n        if(tipo_usuario==='admin'){\r\n          for(let cliente of clientes){\r\n            clientesBd.push({id: cliente.ID,nombre: cliente.NOMBRE.toUpperCase()});\r\n          }\r\n        }else{\r\n        for(let cliente of clientes){\r\n          if(cliente.ID+''===tipo_usuario+''){\r\n            console.log('escocgio cliente');\r\n            console.log(cliente);\r\n            clientesBd.push({id: cliente.ID,nombre: cliente.NOMBRE.toUpperCase()});\r\n          }\r\n        }\r\n        }\r\n        console.log(clientesBd);\r\n        this.setState({ clientes:clientesBd });\r\n      });\r\n      axios.get(\"http://app.cargoex.cl/app/cargoex/app/ciudades\",config)\r\n        .then(res => {\r\n          const ciudades = res.data;\r\n          const regionesBd=[];\r\n          const ramales = [];\r\n          console.log('ciudades son');\r\n          console.log(ciudades);\r\n          for(let city of ciudades.datos){\r\n\r\n            regionesBd.push({iata: city.IATA,name: city.NOMBRE.toUpperCase(),padre:city.IATA_PADRE});\r\n\r\n          }\r\n          this.setState({ regiones:regionesBd});\r\n        });\r\n    /*\r\n        var config2 = {\r\n        headers: {\"Content-Type\": \"application/json\",\"X-API-KEY\": \"55IcsddHxiy2E3q653RpYtb\",\"Access-Control-Allow-Origin\": \"*\"}\r\n        };\r\n        let data = JSON.stringify([{\r\n            \"COD_CLIENTE\" : 2222,\r\n            \"ID_REFERENCIA\" : \"223422\",\r\n            \"NOMBRE\" : \"LUIS ESPINOZA\",\r\n            \"RUT\" : \"1111111-1\",\r\n            \"DIRECCION\" : \"los alerces 232\",\r\n            \"GUIA\" : \"123-456-789\",\r\n            \"COMUNA\" : \"SCL\",\r\n            \"LONG_ORIGEN\" : \"0\",\r\n            \"LAT_ORIGEN\" : \"0\",\r\n            \"NOTA\" : \"ENTREGAR CON CUIDADO\",\r\n            \"TELEFONO\" : \"+56922554788\",\r\n            \"MAIL\" : \"TUMAI@mail.com\",\r\n            \"BULTOS\" : \"1\",\r\n            \"ALTO\" : \"1.2\",\r\n            \"ANCHO\" : \"1.6\",\r\n            \"LARGO\" : \"4.2\",\r\n            \"PESO\" : \"1.6\",\r\n            \"TIPO_CARGA\" : \"CAJA\",\r\n            \"CENTRO_COSTO\" : \"ECOMMERCE\",\r\n            \"TIPO_NEGOCIO\" : \"PRINCIPAL\",\r\n            \"CANAL\" : \"AUTOSERVICIO\",\r\n            \"COD_BARRA\" : \"54159116564\",\r\n            \"NUM_BOLETA\" : \"1111574414\",\r\n            \"VALOR\" : \"22990\",\r\n            \"TIPO_ORDEN\" : \"ENTREGA\",\r\n            \"COMUNA_ORIGEN\" : \"SCL\"\r\n                    }]);\r\n                    console.log('va a llamar metodo a probar');\r\n        axios.post(\"http://app.cargoex.cl/app/cargoex/app/despacho\",data,config2)\r\n                      .then(res => {\r\n                        var clientes= res.data;\r\n                        console.log(clientes);\r\n                      });\r\n*/\r\n  }\r\n  getMyLocation() {\r\n    const location = window.navigator && window.navigator.geolocation\r\n\r\n    if (location) {\r\n      location.getCurrentPosition((position) => {\r\n        this.setState({\r\n          latitude: position.coords.latitude,\r\n          longitude: position.coords.longitude,\r\n        });\r\n        console.log('va a mostrar posicion actual ');\r\n        console.log(position.coords.latitude);\r\n        console.log(position.coords.longitude);\r\n      }, (error) => {\r\n        this.setState({ latitude: 'err-latitude', longitude: 'err-longitude' })\r\n      })\r\n    }\r\n\r\n  }\r\n  handleClose() {\r\n    this.setState({ modaldatos: false });\r\n  }\r\n  handleClose2() {\r\n    this.setState({ modalfinalizado: false });\r\n  }\r\n  agregarUnidad(num){\r\n    console.log('tamaño es'+ num.toString().length);\r\n    if(num.toString().length ===1){\r\n      return ('0'+num);\r\n    }else{\r\n      return num;\r\n    }\r\n  }\r\n  calculateDistance(lat1, lon1, lat2, lon2, unit) {\r\n  var radlat1 = Math.PI * lat1/180\r\n  var radlat2 = Math.PI * lat2/180\r\n  var radlon1 = Math.PI * lon1/180\r\n  var radlon2 = Math.PI * lon2/180\r\n  var theta = lon1-lon2\r\n  var radtheta = Math.PI * theta/180\r\n  var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\r\n  dist = Math.acos(dist)\r\n  dist = dist * 180/Math.PI\r\n  dist = dist * 60 * 1.1515\r\n  if (unit==\"K\") { dist = dist * 1.609344 }\r\n  if (unit==\"N\") { dist = dist * 0.8684 }\r\n  return dist\r\n}\r\nverificarCiudad(city){\r\n  for ( let i = 0; i < ciudades.length; i++) {\r\n    if(ciudades[i].IATA.toUpperCase() === city.toUpperCase() || ciudades[i].NOMBRE.toUpperCase() === city.toUpperCase()){\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\nobtenerIata(city){\r\n        for ( let i = 0; i < ciudades.length; i++) {\r\n            if(ciudades[i].IATA.toUpperCase() === city.toUpperCase() || ciudades[i].NOMBRE.toUpperCase() === city.toUpperCase()){\r\n                return ciudades[i].IATA;\r\n            }\r\n        }\r\n        return false;\r\n}\r\n  cargarOrdenes(){\r\n    console.log('llego a cargar ordenes');\r\n    this.setState({\r\n      loading:true,\r\n      displayTabla:'none',\r\n      displayAprobar:'none'\r\n    });\r\n    var idcliente=this.state.idcliente;\r\n    console.log(idcliente);\r\n    var ordenes = this.state.ordenes;\r\n  //  console.log(ordenes);\r\n    var datetime = new Date();\r\n    var dia = this.agregarUnidad(datetime.getDate());\r\n    var mes = this.agregarUnidad(datetime.getMonth()+1);\r\n    var hora=this.agregarUnidad(datetime.getHours());\r\n    var minutos= this.agregarUnidad(datetime.getMinutes());\r\n    var segundos= this.agregarUnidad(datetime.getSeconds());\r\n  var diaActual= datetime.getFullYear() +'-'+mes+'-'+dia+' '+hora+':'+minutos+':'+segundos;\r\n    var config = {\r\n    headers: {\"Content-Type\": \"application/json\",\"X-API-KEY\": \"55IcsddHxiy2E3q653RpYtb\",\"Access-Control-Allow-Origin\": \"*\"}\r\n    };\r\n    let data = JSON.stringify({\r\n      idcliente: idcliente,\r\n      ordenes:ordenes,\r\n      dia:diaActual\r\n    });\r\n    \r\n    console.log('harallamado a servicio ');\r\n    axios.post(\"http://localhost:5000/insertarOrdenes\",data,config)\r\n      .then(res => {\r\n        this.setState({\r\n          loading:false,\r\n          modalfinalizado: true\r\n        });\r\n        //codigo de distancia\r\n        /*\r\n        var latitude = this.state.latitude;\r\n        var longitude = this.state.longitude;\r\n\r\n        for ( let i = 0; i < ordenes.length; i++) {\r\n          ordenes[i][\"distance\"] = this.calculateDistance(latitude,longitude,ordenes[i][\"lat_comuna\"],ordenes[i][\"lng_comuna\"],\"K\");\r\n        }\r\n\r\n        ordenes.sort(function(a, b) {\r\n          return a.distance - b.distance;\r\n        });\r\n        console.log(ordenes);\r\n        */\r\n        /*\r\n        const agentes = res.data;\r\n        console.log(agentes);\r\n       const agentesBd=[];\r\n        for(let agente of agentes.datos){\r\n          agentesBd.push({id: agente.COD_CHOFER,nombre: agente.NOMBRE.toUpperCase(),rut:agente.RUT});\r\n        }\r\n        this.setState({ ciudad:value,operadores:agentesBd });\r\n        */\r\n      })\r\n  }\r\n  cargarcsv(event){\r\n    console.log('llego a cargar csv');\r\n    var ordenes = [];\r\n    Geocode.setApiKey(\"AIzaSyCnxZQw92wExvw6VWPC4nww2psARwSuy5g\");\r\n    Geocode.enableDebug();\r\n    var bandera =true;\r\n    var error='Faltan datos obligatorios (nombre, direccion, guia, comuna, bultos o tipo de orden) o ciudad y origen no son codigos iata en fila';\r\n    var erraux='';\r\n    console.log(event);\r\n    console.log('mostrara ultima posicion');\r\n    if(event[event.length-1].length <2){\r\n      console.log('paso validacion de ultima posicion vacia');\r\n      event.splice(event.length-1, 1);\r\n    }\r\n    console.log(event[event.length-1]);\r\n    this.setState({\r\n                    cantidad_ordenes:event.length-1});\r\n    if(event[0].length !== 24 ){\r\n      var error2 = 'La cantidad de columnas no son las apropiadas o esta seleccionando un tipo de archivo incorrecto';\r\n      bandera = false;\r\n\r\n      this.setState({ modaldatos: true,\r\n                      datoerror: error2,\r\n                      displayTabla:'none',\r\n                      displayApertura:'none'});\r\n\r\n    }else{\r\n    for(let aux=1; aux<event.length;aux++){\r\n        if(event[aux][0]==='' || event[aux][2]==='' || event[aux][3]==='' || event[aux][4]==='' || event[aux][5]==='' || event[aux][9]===''){\r\n            if(erraux.length<20){\r\n              erraux += ' Nº'+(aux+1);\r\n            }else{\r\n              erraux += '...';\r\n            }\r\n            console.log('mostrara equivocado');\r\n            console.log(event[aux]);\r\n            bandera = false;\r\n\r\n        }else if( !this.verificarCiudad(event[aux][4]) || !this.verificarCiudad(event[aux][5])){\r\n          if(erraux.length<20  ){\r\n            erraux += ' Nº'+(aux+1);\r\n          }else{\r\n            erraux += '...';\r\n          }\r\n          console.log('mostrara equivocado');\r\n          console.log(event[aux]);\r\n          bandera = false;\r\n        }\r\n        else{\r\n          let bultosOrden = event[aux][9]+'';\r\n          if (bultosOrden==='0'){\r\n            bultosOrden = '1';\r\n          }\r\n          ordenes.push({id:aux,nombre:event[aux][0].toUpperCase(),rut:event[aux][1],direccion:event[aux][2],guia:event[aux][3],\r\n                        comuna:event[aux][4].toUpperCase(),origen:event[aux][5].toUpperCase(),lat_comuna:\" \",lng_comuna:\" \",nota:event[aux][6].toUpperCase(),\r\n                        telefono:event[aux][7],mail:event[aux][8],\r\n                        bultos:bultosOrden,alto:event[aux][10],ancho:event[aux][11],largo:event[aux][12],\r\n                        peso:event[aux][13],tipo_carga:event[aux][14].toUpperCase(),centro_costo:event[aux][15].toUpperCase(),\r\n                        cod_barra:event[aux][16],\r\n                        num_boleta:event[aux][17],valor:event[aux][18],tipo_orden:event[aux][19].toUpperCase(),tipo_negocio:event[aux][20].toUpperCase(),\r\n                        canal:event[aux][21].toUpperCase(),refrigerado:event[aux][22].toUpperCase(),papel:event[aux][23].toUpperCase()\r\n                      });\r\n                        console.log('bandera es');\r\n                        console.log(bandera);\r\n              /*          if(aux===event.length-1 ){\r\n                          console.log('ordenes son');\r\n                          console.log(ordenes);\r\n\r\n                        }  */\r\n                      }\r\n                    }\r\n                    ordenes.sort(function(a, b) {\r\n                        return parseFloat(a.id) - parseFloat(b.id);\r\n                      });\r\n                    if(bandera){\r\n                      this.setState({ ordenes:ordenes,\r\n                                      displayTabla:'block',\r\n                                      displayAprobar:'block' });\r\n                    }else{\r\n                      this.setState({ modaldatos: true,\r\n                                      datoerror: error+' '+erraux,\r\n                                      displayTabla:'none',\r\n                                      displayApertura:'none',\r\n                                      displayAprobar:'none'});\r\n\r\n\r\n                    }\r\n    /*   Geocode.fromAddress(event[aux][4]).then(\r\n            response => {\r\n              const { lat, lng } = response.results[0].geometry.location;\r\n              console.log(lat, lng);\r\n              ordenes.push({id:aux+1,nombre:event[aux][0].toUpperCase(),rut:event[aux][1],direccion:event[aux][2],guia:event[aux][3],\r\n                            comuna:event[aux][4].toUpperCase(),lat_comuna:lat+\"\",lng_comuna:lng+\"\",nota:event[aux][5].toUpperCase(),\r\n                            telefono:event[aux][6],mail:event[aux][7],\r\n                            bultos:event[aux][8],alto:event[aux][9],ancho:event[aux][10],largo:event[aux][11],\r\n                            peso:event[aux][12],tipo_carga:event[aux][13].toUpperCase(),centro_costo:event[aux][14].toUpperCase(),\r\n                            cod_barra:event[aux][15],\r\n                            num_boleta:event[aux][16],valor:event[aux][17],tipo_orden:event[aux][18].toUpperCase()\r\n                          });\r\n              console.log('bandera es');\r\n              console.log(bandera);\r\n              if(aux===event.length-1 ){\r\n                console.log('ordenes son');\r\n                console.log(ordenes);\r\n                ordenes.sort(function(a, b) {\r\n                    return parseFloat(a.id) - parseFloat(b.id);\r\n                  });\r\n                if(bandera){\r\n                  this.setState({ ordenes:ordenes,\r\n                                  displayTabla:'block',\r\n                                  displayAprobar:'block'})\r\n                }else{\r\n                  this.setState({ ordenes:ordenes,\r\n                                  displayTabla:'none',\r\n                                  displayAprobar:'none'});\r\n                }\r\n              }\r\n            },\r\n            error => {\r\n              var error2 = 'la direccion en fila Nº'+aux+' no puede ser verificada ';\r\n\r\n            ordenes.push({id:aux+1,nombre:event[aux][0].toUpperCase(),rut:event[aux][1],direccion:event[aux][2],guia:event[aux][3],\r\n                          comuna:event[aux][4].toUpperCase(),lat_comuna:\" \",lng_comuna:\" \",nota:event[aux][5].toUpperCase(),\r\n                          telefono:event[aux][6],mail:event[aux][7],\r\n                          bultos:event[aux][8],alto:event[aux][9],ancho:event[aux][10],largo:event[aux][11],\r\n                          peso:event[aux][12],tipo_carga:event[aux][13].toUpperCase(),centro_costo:event[aux][14].toUpperCase(),\r\n                          cod_barra:event[aux][15],\r\n                          num_boleta:event[aux][16],valor:event[aux][17],tipo_orden:event[aux][18].toUpperCase()\r\n                        });\r\n                          console.log('bandera es');\r\n                          console.log(bandera);\r\n                          if(aux===event.length-1 ){\r\n                            console.log('ordenes son');\r\n                            console.log(ordenes);\r\n                            ordenes.sort(function(a, b) {\r\n                                return parseFloat(b.id) - parseFloat(a.id);\r\n                              });\r\n                            if(bandera){\r\n                              this.setState({ ordenes:ordenes,\r\n                                              displayTabla:'block',\r\n                                              displayAprobar:'block' });\r\n                            }else{\r\n                              this.setState({ ordenes:ordenes,\r\n                                              displayTabla:'none',\r\n                                              displayAprobar:'none'});\r\n                            }\r\n                          }\r\n\r\n\r\n            }\r\n\r\n\r\n          );\r\n*/\r\n\r\n }\r\n\r\n  }\r\n  matchStocks(state, value) {\r\n    return (\r\n\r\n      state.nombre.toLowerCase().indexOf(value.toLowerCase()) !== -1 );\r\n  }\r\n  cambiarCliente(value){\r\n    this.setState({\r\n      displayCarga:'none',\r\n      value:value\r\n    });\r\n  }\r\n  componentDidMount() {\r\n  }\r\n\r\n  render() {\r\n    const selectRow = {\r\n     mode: 'checkbox',\r\n     showOnlySelected: true\r\n   };\r\n   const options = {\r\n     toolBar: this.createCustomToolBar\r\n   };\r\n    return (\r\n\r\n      <Container  >\r\n\r\n          <Modal show={this.state.modaldatos} onHide={this.handleClose}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>ALERTA !</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <h3 style={{color:'#ff0000'}}>{this.state.datoerror}</h3>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n            <Button variant=\"primary\" onClick={this.handleClose}>\r\n                ok\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n\r\n          <Modal show={this.state.modalfinalizado} onHide={this.handleClose2}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Ordenes Registradas !</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <h1 style={{color:'#202156'}}> {this.state.cantidad_ordenes} ordenes han sido subidas con exito </h1>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n            <Button variant=\"primary\" onClick={this.handleClose2}>\r\n                ok\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n\r\n\r\n        <Row style={{marginTop:'1%'}}>\r\n        <Col sm={3} style={{zIndex:2,height:70, justifyContent: 'left',textAlign:\"left\"}}>\r\n        <p style={{marginBottom:'0.5rem',\r\n        color: '#202156',fontSize:20, fontWeight: 'bold',\r\n        justifyContent: 'left',textAlign:'left'\r\n        }}> Selecciona Cliente:\r\n        </p>\r\n\r\n        <Autocomplete\r\n            value={ this.state.value }\r\n            inputProps={{ id: 'states-autocomplete' }}\r\n            wrapperStyle={{ position: 'relative', display: 'inline-block'}}\r\n            items={ this.state.clientes}\r\n            getItemValue={ item => item.nombre }\r\n            shouldItemRender={ this.matchStocks }\r\n            onChange={(event, value) => this.cambiarCliente(value) }\r\n            onSelect={this.changeTituloClientes}\r\n            renderMenu={ children => (\r\n              <div className = \"menu\">\r\n              { children }\r\n              </div>\r\n            )}\r\n            renderItem={ (item, isHighlighted) => (\r\n              <div\r\n                className={`item ${isHighlighted ? 'item-highlighted' : ''}`}\r\n                key={ item.id } >\r\n                { item.nombre}\r\n              </div>\r\n            )}\r\n            />\r\n\r\n        </Col>\r\n        <Col sm={3} style={{display:this.state.displayCarga,marginTop:'3%'}} >\r\n              <CSVReader\r\n                cssClass=\"react-csv-input\"\r\n                onFileLoaded={this.cargarcsv}\r\n                parserOptions={{\r\n                    encoding: \"ISO-8859-1\"\r\n                }}\r\n              />\r\n        </Col>\r\n        </Row>\r\n        <Row>\r\n        <Col sm={12}  >\r\n            <div style={{justifyContent: 'center',textAlign:\"center\"}} >\r\n              <ClipLoader\r\n                style={{border: '1px solid'}}\r\n                sizeUnit={\"px\"}\r\n                size={150}\r\n                color={'#202156'}\r\n                loading={this.state.loading}\r\n                />\r\n            </div>\r\n        </Col>\r\n        </Row>\r\n        <Row>\r\n        <Col sm={12}  >\r\n          <p style={{\r\n          color: '#202156',fontSize:20, fontWeight: 'bold',\r\n          justifyContent: 'left',textAlign:'left',display:this.state.displayTabla\r\n        }}> Cantidad de ordenes : {this.state.cantidad_ordenes}\r\n          </p>\r\n        </Col>\r\n        </Row>\r\n        <Row style={{ paddingBottom:'1rem',marginTop:'2%',justifyContent: 'left',textAlign:\"left\",display:this.state.displayTabla}} >\r\n          <Col sm={12} >\r\n            <BootstrapTable\r\n            pagination\r\n            containerStyle={{width: '370%',fontSize:14}}\r\n            data={ this.state.ordenes}\r\n            options={ options }\r\n            selectRow={ selectRow }\r\n            exportCSV\r\n            search\r\n            >\r\n            <TableHeaderColumn dataField='id' isKey={ true } dataSort={ true } width={'2%'}>Id</TableHeaderColumn>\r\n            <TableHeaderColumn dataField='nombre' dataSort={ true } width={'12%'}>Nombre</TableHeaderColumn>\r\n            <TableHeaderColumn dataField='rut' dataSort={ true } width={'8%'}>Rut</TableHeaderColumn>\r\n            <TableHeaderColumn dataField='direccion' dataSort={ true } width={'13%'} >Direccion</TableHeaderColumn>\r\n            <TableHeaderColumn dataField='guia' dataSort={ true }  width={'9%'}>Guia</TableHeaderColumn>\r\n            <TableHeaderColumn dataField='comuna' dataSort={ true }  width={'4%'} >Comuna</TableHeaderColumn>\r\n            <TableHeaderColumn dataField='origen' dataSort={ true } width={'3%'}>Origen</TableHeaderColumn>\r\n            <TableHeaderColumn dataField='nota' dataSort={ true }>Nota</TableHeaderColumn>\r\n            <TableHeaderColumn dataField='telefono' dataSort={ true } width={'4%'}>Telefono</TableHeaderColumn>\r\n            <TableHeaderColumn dataField='mail' dataSort={ true }>Mail</TableHeaderColumn>\r\n            <TableHeaderColumn dataField='bultos' dataSort={ true } width={'3%'}>Bultos</TableHeaderColumn>\r\n            <TableHeaderColumn dataField='alto' dataSort={ true }  width={'3%'}>Alto</TableHeaderColumn>\r\n            <TableHeaderColumn dataField='ancho' dataSort={ true }  width={'3%'}>Ancho</TableHeaderColumn>\r\n            <TableHeaderColumn dataField='largo' dataSort={ true }  width={'3%'}>Largo</TableHeaderColumn>\r\n            <TableHeaderColumn dataField='peso' dataSort={ true }  width={'3%'}>Peso</TableHeaderColumn>\r\n            <TableHeaderColumn dataField='tipo_carga' dataSort={ true } width={'4%'}>Tipo Carga</TableHeaderColumn>\r\n            <TableHeaderColumn dataField='centro_costo' dataSort={ true }  width={'5%'}>Centro Costo</TableHeaderColumn>\r\n            <TableHeaderColumn dataField='cod_barra' dataSort={ true }  width={'5%'}>Codigo de Barra</TableHeaderColumn>\r\n            <TableHeaderColumn dataField='num_boleta' dataSort={ true }  width={'6%'}>Numero de Boleta</TableHeaderColumn>\r\n            <TableHeaderColumn dataField='valor' dataSort={ true }  width={'3%'}>Valor</TableHeaderColumn>\r\n            <TableHeaderColumn dataField='tipo_orden' dataSort={ true } width={'4%'}>Tipo de Orden</TableHeaderColumn>\r\n            <TableHeaderColumn dataField='tipo_negocio' dataSort={ true } width={'5%'}>Tipo de Negocio</TableHeaderColumn>\r\n            <TableHeaderColumn dataField='canal' dataSort={ true } width={'4%'}>Canal</TableHeaderColumn>\r\n            <TableHeaderColumn dataField='refrigerado' dataSort={ true } width={'4%'}>Regriferado</TableHeaderColumn>\r\n            <TableHeaderColumn dataField='papel' dataSort={ true } width={'4%'}>Od Papel</TableHeaderColumn>\r\n            </BootstrapTable>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col sm={12}  >\r\n          <Button style={{ display:this.state.displayAprobar,textAlign:'center', border: '1px solid',marginLeft:'40%' }}\r\n            variant=\"primary\"\r\n            onClick={this.cargarOrdenes.bind(this)}\r\n            >\r\n            Aprobar Ordenes\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n\r\n      </Container>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Cargamasiva;\r\n"]},"metadata":{},"sourceType":"module"}