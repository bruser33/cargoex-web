{"ast":null,"code":"import _defineProperty from \"D:\\\\Users\\\\prico\\\\Desktop\\\\cargoex-web\\\\portal2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\Users\\\\prico\\\\Desktop\\\\cargoex-web\\\\portal2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Users\\\\prico\\\\Desktop\\\\cargoex-web\\\\portal2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Users\\\\prico\\\\Desktop\\\\cargoex-web\\\\portal2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Users\\\\prico\\\\Desktop\\\\cargoex-web\\\\portal2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Users\\\\prico\\\\Desktop\\\\cargoex-web\\\\portal2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\Users\\\\prico\\\\Desktop\\\\cargoex-web\\\\portal2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\Users\\\\prico\\\\Desktop\\\\cargoex-web\\\\portal2\\\\src\\\\Rutaoptima.js\";\nimport React, { Component } from 'react';\nimport { Button, Container, Row, Col, Dropdown, DropdownButton, Card, Alert, Modal } from 'react-bootstrap';\nimport DatePicker from \"react-datepicker\";\nimport { Map, InfoWindow, Marker, GoogleApiWrapper, Polyline } from 'google-maps-react';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport { css } from '@emotion/core';\nimport { ClipLoader } from 'react-spinners';\nimport CSVReader from \"react-csv-reader\";\nimport Autocomplete from 'react-autocomplete';\nimport BarcodeReader from 'react-barcode-reader';\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, PieChart, Pie, Sector, Cell, ResponsiveContainer } from 'recharts';\nimport axios from 'axios';\nimport cors from 'cors';\nimport 'react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './App.css';\n\nvar Rutaoptima =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Rutaoptima, _Component);\n\n  function Rutaoptima(props) {\n    var _this;\n\n    _classCallCheck(this, Rutaoptima);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Rutaoptima).call(this, props));\n\n    _this.getposition = function (lat, lng) {\n      console.log(lat);\n      console.log(lng);\n\n      _this.setState({\n        latitude: lat,\n        longitude: lng,\n        modalMapa: false\n      });\n    };\n\n    _this.state = {\n      fecha: new Date(),\n      displayBoton: 'block',\n      displayRuta: 'none',\n      modalMapa: false,\n      latitude: '',\n      longitude: '',\n      ultimoID: '',\n      ultimoLat: 0,\n      ultimoLng: 0,\n      ordenes: [],\n      coordenadasRutas: [],\n      imagenEntrega: 'https://raw.githubusercontent.com/Concept211/Google-Maps-Markers/master/images/marker_green.png'\n    };\n    _this.changeFecha = _this.changeFecha.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.generar = _this.generar.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.cambiarPartida = _this.cambiarPartida.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.cellButton = _this.cellButton.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Rutaoptima, [{\n    key: \"cellButton\",\n    value: function cellButton(cell, row, enumObject, rowIndex) {\n      console.log(row);\n      console.log('el objeto es' + enumObject + cell + '--' + row.nombre + '--' + rowIndex);\n      var url = \"http://18.219.80.103/rutaap/public/consultaOd/\" + row.OD_PAPEL;\n      return React.createElement(Button, {\n        target: \"_blank\",\n        href: url,\n        variant: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"VER MAS\");\n    }\n  }, {\n    key: \"handleClose\",\n    value: function handleClose() {\n      this.setState({\n        modalMapa: false\n      });\n    }\n  }, {\n    key: \"cambiarPartida\",\n    value: function cambiarPartida() {\n      this.setState({\n        modalMapa: true\n      });\n    }\n  }, {\n    key: \"generar\",\n    value: function generar() {\n      var _this2 = this;\n\n      var dia = this.state.fecha.getDate() + \"\";\n      var mes = this.state.fecha.getMonth() + 1 + \"\";\n      var year = this.state.fecha.getFullYear();\n\n      if (dia.length === 1) {\n        dia = '0' + dia;\n      }\n\n      if (mes.length === 1) {\n        mes = '0' + mes;\n      }\n\n      console.log(year + '-' + mes + '-' + dia);\n      var fecha = year + '-' + mes + '-' + dia;\n      var config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"X-API-KEY\": \"55IcsddHxiy2E3q653RpYtb\",\n          \"Access-Control-Allow-Origin\": \"*\"\n        }\n      };\n      var data = JSON.stringify({\n        fecha: fecha\n      });\n      axios.post(\"http://app.cargoex.cl:5000/obtenerOrdenes\", data, config).then(function (res) {\n        var ordenes = res.data;\n        console.log(ordenes);\n\n        if (ordenes.length > 1) {\n          //codigo de distancia\n          var latitude = _this2.state.latitude;\n          var longitude = _this2.state.longitude;\n          var coordenadasRutas = [];\n          var marcadores = [];\n          var ultimaLat = '';\n          var ultimaLng = '';\n\n          for (var i = 0; i < ordenes.length; i++) {\n            ordenes[i][\"distance\"] = _this2.calculateDistance(latitude, longitude, ordenes[i][\"latitude\"], ordenes[i][\"longitude\"], \"K\");\n            /*    coordenadasRutas.push({coordenadas:[{lat: parseFloat(this.state.latitude), lng: parseFloat(this.state.longitude)},\r\n                {lat: parseFloat(ordenes[i][\"latitude\"]), lng: parseFloat(ordenes[i][\"longitude\"])}]});  */\n\n            if (i === 0) {\n              coordenadasRutas.push({\n                id: i + 1 + '',\n                coordenadas: [{\n                  lat: parseFloat(_this2.state.latitude),\n                  lng: parseFloat(_this2.state.longitude)\n                }, {\n                  lat: parseFloat(ordenes[i][\"latitude\"]),\n                  lng: parseFloat(ordenes[i][\"longitude\"])\n                }]\n              });\n            } else {\n              coordenadasRutas.push({\n                id: i + 1 + '',\n                coordenadas: [{\n                  lat: parseFloat(ordenes[i - 1][\"latitude\"]),\n                  lng: parseFloat(ordenes[i - 1][\"longitude\"])\n                }, {\n                  lat: parseFloat(ordenes[i][\"latitude\"]),\n                  lng: parseFloat(ordenes[i][\"longitude\"])\n                }]\n              });\n\n              if (i === ordenes.length - 1) {\n                ultimaLat = parseFloat(ordenes[i][\"latitude\"]);\n                ultimaLng = parseFloat(ordenes[i][\"longitude\"]);\n              }\n            }\n          }\n\n          var ultimoid = ordenes.length + 1;\n          ordenes.sort(function (a, b) {\n            return a.distance - b.distance;\n          });\n\n          for (var _i = 0; _i < ordenes.length; _i++) {\n            ordenes[_i]['id'] = _i + 1 + '';\n            ordenes[_i][\"latitude\"] = parseFloat(ordenes[_i][\"latitude\"]);\n            ordenes[_i][\"longitude\"] = parseFloat(ordenes[_i][\"longitude\"]);\n          }\n\n          console.log(coordenadasRutas);\n          console.log('ordenes son ');\n          console.log(ordenes);\n\n          _this2.setState({\n            displayRuta: 'block',\n            coordenadasRutas: coordenadasRutas,\n            ordenes: ordenes,\n            ultimoID: ultimoid + '',\n            ultimoLat: ultimaLat,\n            ultimoLng: ultimaLng\n          });\n        }\n      });\n    }\n  }, {\n    key: \"calculateDistance\",\n    value: function calculateDistance(lat1, lon1, lat2, lon2, unit) {\n      var radlat1 = Math.PI * lat1 / 180;\n      var radlat2 = Math.PI * lat2 / 180;\n      var radlon1 = Math.PI * lon1 / 180;\n      var radlon2 = Math.PI * lon2 / 180;\n      var theta = lon1 - lon2;\n      var radtheta = Math.PI * theta / 180;\n      var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n      dist = Math.acos(dist);\n      dist = dist * 180 / Math.PI;\n      dist = dist * 60 * 1.1515;\n\n      if (unit == \"K\") {\n        dist = dist * 1.609344;\n      }\n\n      if (unit == \"N\") {\n        dist = dist * 0.8684;\n      }\n\n      return dist;\n    }\n  }, {\n    key: \"changeFecha\",\n    value: function changeFecha(date) {\n      this.setState({\n        fecha: date\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getMyLocation();\n    }\n  }, {\n    key: \"getMyLocation\",\n    value: function getMyLocation() {\n      var _this3 = this;\n\n      var location = window.navigator && window.navigator.geolocation;\n\n      if (location) {\n        location.getCurrentPosition(function (position) {\n          _this3.setState({\n            latitude: position.coords.latitude + '',\n            longitude: position.coords.longitude + ''\n          });\n\n          console.log('va a mostrar posicion actual ');\n          console.log(position.coords.latitude);\n          console.log(position.coords.longitude);\n        }, function (error) {\n          _this3.setState({\n            latitude: 'err-latitude',\n            longitude: 'err-longitude'\n          });\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var selectRow = {\n        mode: 'checkbox',\n        showOnlySelected: true\n      };\n      var options = {\n        toolBar: this.createCustomToolBar\n      };\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        show: this.state.modalMapa,\n        size: 'lg',\n        onHide: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"ALERTA !\")), React.createElement(Modal.Body, {\n        style: {\n          height: '30rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(Map, {\n        initialCenter: {\n          lat: this.state.latitude,\n          lng: this.state.longitude\n        },\n        center: {\n          lat: this.state.latitude,\n          lng: this.state.longitude\n        },\n        name: 'Current location',\n        google: this.props.google,\n        zoom: 13,\n        onClick: function onClick(t, map, c) {\n          return _this4.getposition(c.latLng.lat(), c.latLng.lng());\n        },\n        style: {\n          border: '1px solid',\n          borderColor: '#202156',\n          borderRadius: '1rem 1rem 1rem 1em ',\n          maxWidth: '96%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      })), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      })), React.createElement(Row, {\n        style: {\n          justifyContent: 'left',\n          marginTop: '2rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 3,\n        style: {\n          justifyContent: 'left',\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: _defineProperty({\n          textAlign: \"left\",\n          marginBottom: '0.5rem',\n          color: '#202156',\n          fontSize: 16,\n          fontWeight: 'bold',\n          justifyContent: 'left'\n        }, \"textAlign\", 'left'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \" FECHA: \"), React.createElement(DatePicker, {\n        style: {\n          width: '2rem'\n        },\n        dateFormat: \"dd/MM/yyyy\",\n        selected: this.state.fecha,\n        onChange: this.changeFecha,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(Button, {\n        style: {\n          display: this.state.displayBoton,\n          marginTop: '1.5rem'\n        },\n        variant: \"primary\",\n        onClick: this.cambiarPartida,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \"Cambiar Partida\")), React.createElement(Col, {\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(Button, {\n        style: {\n          display: this.state.displayBoton,\n          marginTop: '1.5rem'\n        },\n        variant: \"primary\",\n        onClick: this.generar.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \"Generar Ruta\"))), React.createElement(Row, {\n        ref: function ref(el) {\n          return _this4.componentRef = el;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(Col, {\n        style: {\n          height: 600,\n          marginTop: '5%',\n          display: this.state.displayRuta\n        },\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(Map, {\n        initialCenter: {\n          lat: this.state.latitude,\n          lng: this.state.longitude\n        },\n        center: {\n          lat: this.state.latitude,\n          lng: this.state.longitude\n        },\n        name: 'Current location',\n        google: this.props.google,\n        zoom: 12,\n        onClick: function onClick(t, map, c) {\n          return _this4.getposition(c.latLng.lat(), c.latLng.lng());\n        },\n        style: {\n          border: '1px solid',\n          borderColor: '#202156',\n          borderRadius: '1rem 1rem 1rem 1em ',\n          maxWidth: '96%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, this.state.coordenadasRutas.map(function (variant) {\n        return React.createElement(Marker, {\n          title: variant.id,\n          name: variant.id,\n          label: variant.id,\n          fecha: variant.id,\n          onClick: _this4.onMarkerClick,\n          icon: {\n            url: _this4.state.imagenEntrega\n          },\n          position: {\n            lat: variant.coordenadas[0].lat,\n            lng: variant.coordenadas[0].lng\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279\n          },\n          __self: this\n        });\n      }), React.createElement(Marker, {\n        title: this.state.ultimoID,\n        name: this.state.ultimoID,\n        label: this.state.ultimoID,\n        fecha: this.state.ultimoID,\n        onClick: this.onMarkerClick,\n        icon: {\n          url: this.state.imagenEntrega\n        },\n        position: {\n          lat: this.state.ultimoLat,\n          lng: this.state.ultimoLng\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }), this.state.coordenadasRutas.map(function (variant) {\n        return React.createElement(Polyline, {\n          path: variant.coordenadas,\n          strokeColor: \"#202156\",\n          visible: true,\n          strokeOpacity: 0.8,\n          strokeWeight: 1.5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 303\n          },\n          __self: this\n        });\n      })))), React.createElement(Row, {\n        style: {\n          paddingBottom: '1rem',\n          marginTop: '2%',\n          justifyContent: 'left',\n          textAlign: \"left\",\n          display: this.state.displayRuta\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        pagination: true,\n        containerStyle: {\n          width: '100%'\n        },\n        data: this.state.ordenes,\n        options: options,\n        selectRow: selectRow,\n        exportCSV: true,\n        search: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        dataField: \"id\",\n        isKey: true,\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, \"Id\"), React.createElement(TableHeaderColumn, {\n        dataField: \"OD_PAPEL\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, \"Od\"), React.createElement(TableHeaderColumn, {\n        dataField: \"NOMBRE\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, \"Nombre\"), React.createElement(TableHeaderColumn, {\n        dataField: \"DIRECCION\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, \"Direccion\"), React.createElement(TableHeaderColumn, {\n        dataField: \"COMUNA\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, \"Comuna\"), React.createElement(TableHeaderColumn, {\n        dataField: \"button\",\n        dataFormat: this.cellButton.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Rutaoptima;\n}(Component);\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyCnxZQw92wExvw6VWPC4nww2psARwSuy5g\"\n})(Rutaoptima);","map":{"version":3,"sources":["D:\\Users\\prico\\Desktop\\cargoex-web\\portal2\\src\\Rutaoptima.js"],"names":["React","Component","Button","Container","Row","Col","Dropdown","DropdownButton","Card","Alert","Modal","DatePicker","Map","InfoWindow","Marker","GoogleApiWrapper","Polyline","BootstrapTable","TableHeaderColumn","css","ClipLoader","CSVReader","Autocomplete","BarcodeReader","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","PieChart","Pie","Sector","Cell","ResponsiveContainer","axios","cors","Rutaoptima","props","getposition","lat","lng","console","log","setState","latitude","longitude","modalMapa","state","fecha","Date","displayBoton","displayRuta","ultimoID","ultimoLat","ultimoLng","ordenes","coordenadasRutas","imagenEntrega","changeFecha","bind","generar","cambiarPartida","handleClose","cellButton","cell","row","enumObject","rowIndex","nombre","url","OD_PAPEL","dia","getDate","mes","getMonth","year","getFullYear","length","config","headers","data","JSON","stringify","post","then","res","marcadores","ultimaLat","ultimaLng","i","calculateDistance","push","id","coordenadas","parseFloat","ultimoid","sort","a","b","distance","lat1","lon1","lat2","lon2","unit","radlat1","Math","PI","radlat2","radlon1","radlon2","theta","radtheta","dist","sin","cos","acos","date","getMyLocation","location","window","navigator","geolocation","getCurrentPosition","position","coords","error","selectRow","mode","showOnlySelected","options","toolBar","createCustomToolBar","height","google","t","map","c","latLng","border","borderColor","borderRadius","maxWidth","justifyContent","marginTop","textAlign","marginBottom","color","fontSize","fontWeight","width","display","el","componentRef","variant","onMarkerClick","paddingBottom","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, Container, Row, Col,Dropdown,DropdownButton, Card, Alert, Modal } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport {Map, InfoWindow, Marker, GoogleApiWrapper,Polyline} from 'google-maps-react';\r\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\r\nimport { css } from '@emotion/core';\r\nimport { ClipLoader } from 'react-spinners';\r\nimport CSVReader from \"react-csv-reader\";\r\nimport Autocomplete from  'react-autocomplete';\r\nimport BarcodeReader from 'react-barcode-reader'\r\nimport {AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, PieChart, Pie, Sector, Cell,ResponsiveContainer} from 'recharts';\r\nimport axios from 'axios';\r\nimport cors from 'cors';\r\nimport 'react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './App.css';\r\n\r\nclass Rutaoptima extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      fecha: new Date(),\r\n      displayBoton:'block',\r\n      displayRuta:'none',\r\n      modalMapa:false,\r\n      latitude: '',\r\n      longitude: '',\r\n      ultimoID:'',\r\n      ultimoLat:0,\r\n      ultimoLng:0,\r\n      ordenes:[],\r\n      coordenadasRutas:[],\r\n      imagenEntrega:'https://raw.githubusercontent.com/Concept211/Google-Maps-Markers/master/images/marker_green.png'\r\n\r\n    }\r\n    this.changeFecha= this.changeFecha.bind(this);\r\n    this.generar= this.generar.bind(this);\r\n    this.cambiarPartida= this.cambiarPartida.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.cellButton = this.cellButton.bind(this);\r\n\r\n  }\r\n  cellButton(cell, row, enumObject, rowIndex) {\r\n    console.log(row);\r\n    console.log('el objeto es'+enumObject+cell+'--'+row.nombre+'--'+rowIndex);\r\n    let url = \"http://18.219.80.103/rutaap/public/consultaOd/\"+row.OD_PAPEL;\r\n     return (\r\n        <Button\r\n        target=\"_blank\"\r\n        href={url}\r\n        variant=\"primary\"\r\n        >\r\n        VER MAS\r\n        </Button>\r\n     )\r\n  };\r\n  handleClose() {\r\n    this.setState({ modalMapa: false });\r\n  }\r\n  cambiarPartida(){\r\n    this.setState({ modalMapa: true });\r\n\r\n  }\r\n  generar(){\r\n    let dia=this.state.fecha.getDate()+\"\";\r\n    let mes=(this.state.fecha.getMonth()+1)+\"\";\r\n    let year=this.state.fecha.getFullYear();\r\n    if(dia.length===1){\r\n      dia='0'+dia;\r\n    }\r\n    if(mes.length===1){\r\n      mes='0'+mes;\r\n    }\r\n    console.log(year+'-'+mes+'-'+dia);\r\n    var fecha =year+'-'+mes+'-'+dia;\r\n    var config = {\r\n\r\n    headers: {\"Content-Type\": \"application/json\",\"X-API-KEY\": \"55IcsddHxiy2E3q653RpYtb\",\"Access-Control-Allow-Origin\": \"*\"}\r\n    };\r\n    let data = JSON.stringify({\r\n      fecha: fecha\r\n\r\n    });\r\n    axios.post(\"http://app.cargoex.cl:5000/obtenerOrdenes\",data,config)\r\n          .then(res => {\r\n                  var ordenes = res.data;\r\n                  console.log(ordenes);\r\n                  if(ordenes.length>1){\r\n                    //codigo de distancia\r\n\r\n                    var latitude = this.state.latitude;\r\n                    var longitude = this.state.longitude;\r\n                    var coordenadasRutas = [];\r\n                    var marcadores = [];\r\n                    var ultimaLat='';\r\n                    var ultimaLng='';\r\n                    for ( let i = 0; i < ordenes.length; i++) {\r\n                      ordenes[i][\"distance\"] = this.calculateDistance(latitude,longitude,ordenes[i][\"latitude\"],ordenes[i][\"longitude\"],\"K\");\r\n                  /*    coordenadasRutas.push({coordenadas:[{lat: parseFloat(this.state.latitude), lng: parseFloat(this.state.longitude)},\r\n                      {lat: parseFloat(ordenes[i][\"latitude\"]), lng: parseFloat(ordenes[i][\"longitude\"])}]});  */\r\n                      if(i===0){\r\n                        coordenadasRutas.push({id:(i+1)+'',coordenadas:[{lat: parseFloat(this.state.latitude), lng: parseFloat(this.state.longitude)},\r\n                        {lat: parseFloat(ordenes[i][\"latitude\"]), lng: parseFloat(ordenes[i][\"longitude\"])}]});\r\n                      }else{\r\n                        coordenadasRutas.push({id:(i+1)+'',coordenadas:[{lat: parseFloat(ordenes[i-1][\"latitude\"]), lng: parseFloat(ordenes[i-1][\"longitude\"])},\r\n                        {lat: parseFloat(ordenes[i][\"latitude\"]), lng: parseFloat(ordenes[i][\"longitude\"])}]});\r\n                        if(i===ordenes.length-1){\r\n                          ultimaLat = parseFloat(ordenes[i][\"latitude\"]);\r\n                          ultimaLng = parseFloat(ordenes[i][\"longitude\"]);\r\n                        }\r\n                      }\r\n                    }\r\n                    var ultimoid = ordenes.length+1;\r\n                    ordenes.sort(function(a, b) {\r\n                      return a.distance - b.distance;\r\n                    });\r\n                    for( let i = 0; i < ordenes.length; i++) {\r\n                        ordenes[i]['id'] = (i+1)+'';\r\n                        ordenes[i][\"latitude\"] = parseFloat(ordenes[i][\"latitude\"]);\r\n                        ordenes[i][\"longitude\"] = parseFloat(ordenes[i][\"longitude\"]);\r\n                    }\r\n\r\n\r\n                    console.log(coordenadasRutas);\r\n                    console.log('ordenes son ');\r\n                    console.log(ordenes);\r\n                    this.setState({\r\n                            displayRuta: 'block',\r\n                            coordenadasRutas:coordenadasRutas,\r\n                            ordenes:ordenes,\r\n                            ultimoID:ultimoid+'',\r\n                            ultimoLat:ultimaLat,\r\n                            ultimoLng:ultimaLng\r\n                          });\r\n                  }\r\n\r\n            });\r\n\r\n  }\r\n\r\n  calculateDistance(lat1, lon1, lat2, lon2, unit) {\r\n  var radlat1 = Math.PI * lat1/180\r\n  var radlat2 = Math.PI * lat2/180\r\n  var radlon1 = Math.PI * lon1/180\r\n  var radlon2 = Math.PI * lon2/180\r\n  var theta = lon1-lon2\r\n  var radtheta = Math.PI * theta/180\r\n  var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\r\n  dist = Math.acos(dist)\r\n  dist = dist * 180/Math.PI\r\n  dist = dist * 60 * 1.1515\r\n  if (unit==\"K\") { dist = dist * 1.609344 }\r\n  if (unit==\"N\") { dist = dist * 0.8684 }\r\n  return dist\r\n}\r\n\r\n  changeFecha(date) {\r\n    this.setState({\r\n            fecha: date\r\n          });\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n  componentWillMount() {\r\n    this.getMyLocation();\r\n  }\r\n  getposition = (lat, lng) => {\r\n     console.log(lat);\r\n     console.log(lng);\r\n    this.setState({\r\n         latitude:lat,\r\n         longitude:lng,\r\n         modalMapa:false\r\n       })\r\n }\r\n\r\n getMyLocation() {\r\n   const location = window.navigator && window.navigator.geolocation\r\n\r\n   if (location) {\r\n     location.getCurrentPosition((position) => {\r\n       this.setState({\r\n         latitude: position.coords.latitude+'',\r\n         longitude: position.coords.longitude+''       });\r\n       console.log('va a mostrar posicion actual ');\r\n       console.log(position.coords.latitude);\r\n       console.log(position.coords.longitude);\r\n     }, (error) => {\r\n       this.setState({ latitude: 'err-latitude', longitude: 'err-longitude' })\r\n     })\r\n   }\r\n\r\n }\r\n\r\n  render() {\r\n    const selectRow = {\r\n     mode: 'checkbox',\r\n     showOnlySelected: true\r\n   };\r\n   const options = {\r\n     toolBar: this.createCustomToolBar\r\n   };\r\n    return (\r\n\r\n      <Container  >\r\n        <Modal show={this.state.modalMapa} size = {'lg'} onHide={this.handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>ALERTA !</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body style={{height:'30rem'}}>\r\n          <Map\r\n              initialCenter={{\r\n                lat: this.state.latitude,\r\n                lng: this.state.longitude\r\n              }}\r\n              center={{lat: this.state.latitude, lng: this.state.longitude }}\r\n              name={'Current location'}\r\n              google={this.props.google}\r\n              zoom={13}\r\n              onClick={(t, map, c) => this.getposition(c.latLng.lat(), c.latLng.lng())}\r\n              style={{ border: '1px solid',borderColor: '#202156',borderRadius:'1rem 1rem 1rem 1em ',maxWidth:'96%'}}>\r\n\r\n              </Map>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        <Row style={{ justifyContent: 'left', marginTop:'2rem'}}>\r\n          <Col sm={3} style={{ justifyContent: 'left',textAlign:'left'}} >\r\n              <p style={{textAlign:\"left\",marginBottom:'0.5rem', color: '#202156',\r\n              fontSize:16, fontWeight: 'bold', justifyContent: 'left',textAlign:'left'\r\n            }}> FECHA: </p>\r\n\r\n              <DatePicker\r\n                style={{width:'2rem'}}\r\n                dateFormat=\"dd/MM/yyyy\"\r\n                selected={this.state.fecha}\r\n                onChange={this.changeFecha}\r\n                />\r\n\r\n          </Col>\r\n          <Col sm={3}  >\r\n            <Button style={{ display:this.state.displayBoton,marginTop:'1.5rem'}}\r\n              variant=\"primary\"\r\n              onClick={this.cambiarPartida}\r\n\r\n              >\r\n              Cambiar Partida\r\n              </Button>\r\n          </Col>\r\n          <Col sm={3}  >\r\n            <Button style={{ display:this.state.displayBoton,marginTop:'1.5rem'}}\r\n              variant=\"primary\"\r\n              onClick={this.generar.bind(this)}\r\n\r\n              >\r\n              Generar Ruta\r\n              </Button>\r\n          </Col>\r\n        </Row>\r\n        <Row ref={el => (this.componentRef = el)} >\r\n        <Col style={{ height:600,marginTop:'5%',display:this.state.displayRuta}} sm={12}>\r\n        <Map\r\n            initialCenter={{\r\n              lat: this.state.latitude,\r\n              lng: this.state.longitude\r\n            }}\r\n            center={{lat: this.state.latitude, lng: this.state.longitude }}\r\n            name={'Current location'}\r\n            google={this.props.google}\r\n            zoom={12}\r\n            onClick={(t, map, c) => this.getposition(c.latLng.lat(), c.latLng.lng())}\r\n            style={{ border: '1px solid',borderColor: '#202156',borderRadius:'1rem 1rem 1rem 1em ',maxWidth:'96%'}}>\r\n            {this.state.coordenadasRutas.map(\r\n              variant => (\r\n                <Marker\r\n                  title={variant.id}\r\n                  name={variant.id}\r\n                  label={variant.id}\r\n                  fecha={variant.id}\r\n                  onClick={this.onMarkerClick}\r\n                  icon={{\r\n                       url: this.state.imagenEntrega\r\n                     }}\r\n                   position={{lat: variant.coordenadas[0].lat, lng: variant.coordenadas[0].lng}} />\r\n                  ))\r\n                }\r\n                <Marker\r\n                  title={this.state.ultimoID}\r\n                  name={this.state.ultimoID}\r\n                  label={this.state.ultimoID}\r\n                  fecha={this.state.ultimoID}\r\n                  onClick={this.onMarkerClick}\r\n                  icon={{\r\n                       url: this.state.imagenEntrega\r\n                     }}\r\n                   position={{lat: this.state.ultimoLat, lng: this.state.ultimoLng}} />\r\n            {this.state.coordenadasRutas.map(\r\n              variant => (\r\n                <Polyline\r\n                path={variant.coordenadas}\r\n                strokeColor=\"#202156\"\r\n                visible={true}\r\n                strokeOpacity={0.8}\r\n                strokeWeight={1.5} />\r\n\r\n                  ))\r\n                }\r\n            </Map>\r\n        </Col>\r\n        </Row>\r\n\r\n        <Row style={{ paddingBottom:'1rem',marginTop:'2%',justifyContent: 'left',textAlign:\"left\",display:this.state.displayRuta}} >\r\n\r\n          <Col sm={12} >\r\n            <BootstrapTable\r\n            pagination\r\n            containerStyle={{width: '100%'}}\r\n            data={ this.state.ordenes}\r\n            options={ options }\r\n            selectRow={ selectRow }\r\n            exportCSV\r\n            search\r\n            >\r\n            <TableHeaderColumn dataField='id' isKey={ true } dataSort={ true } >Id</TableHeaderColumn>\r\n            <TableHeaderColumn dataField='OD_PAPEL' dataSort={ true }>Od</TableHeaderColumn>\r\n            <TableHeaderColumn dataField='NOMBRE' dataSort={ true } >Nombre</TableHeaderColumn>\r\n            <TableHeaderColumn dataField='DIRECCION' dataSort={ true }>Direccion</TableHeaderColumn>\r\n            <TableHeaderColumn dataField='COMUNA' dataSort={ true }  >Comuna</TableHeaderColumn>\r\n\r\n            <TableHeaderColumn\r\n                   dataField='button'\r\n                   dataFormat={this.cellButton.bind(this)}\r\n                 />\r\n\r\n            </BootstrapTable>\r\n          </Col>\r\n        </Row>\r\n\r\n      </Container>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: (\"AIzaSyCnxZQw92wExvw6VWPC4nww2psARwSuy5g\")\r\n})(Rutaoptima);\r\n"]},"metadata":{},"sourceType":"module"}